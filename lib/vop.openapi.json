{
  "openapi": "3.0.1",
  "info": {
    "title": "Visa Offers Platform",
    "description": "",
    "version": "1"
  },
  "servers": [
    {
      "url": "https://cte.api.visa.com",
      "description": "CTE server"
    }
  ],
  "security": [],
  "tags": [
    {
      "name": "Communities API",
      "description": "VOP Communities API"
    },
    {
      "name": "Merchants API",
      "description": "Merchants API enables VOP partners to search and onboard Visa defined merchant identifiers for specific merchant or store locations. Visa Merchant ID (VMID) identifies a merchant uniquely and Visa Store ID (VSID) identifies the store location. Before a merchant can be a target for an offer its VMID or VSID must be \"onboarded\" into partner's VOP community. Partners can choose to create an offer against multiple merchants, for which merchant group APIs should be utilized."
    },
    {
      "name": "Offers API",
      "description": "Offers API enables partners to create new offers and notify VOP when a cardholder wants to opt-in an offer. VOP partners will need to work with their assigned Visa Implementation manager to create templates which can be used to create new offers. Cardholders can link specific offers to their user profiles using activation endpoints and de-link using deactivation endpoints. VOP partners can also retrieve the activation details related to an offer or a cardholder using Offers API endpoints."
    },
    {
      "name": "Rewards API",
      "description": "Rewards API enables partners to issue a statement credit to a cardholder by submitting a statement credit request to the VOP. Statement credits can only be issued against valid transactions for PANs enrolled in VOP"
    },
    {
      "name": "Users API",
      "description": "Users API allows partners to enroll participants/Visa card and receive information from their  qualified transaction activity. It also allows cardholders to activate a specific offer while  they perform certain qualifying transactions."
    }
  ],
  "paths": {
    "/vop/v1/rewards/credit": {
      "post": {
        "tags": ["Rewards API"],
        "summary": "Submit Statement Credit Request",
        "description": " ",
        "operationId": "Rewards_Post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.RewardRequest"
              },
              "examples": {
                "Default": {
                  "summary": "Default",
                  "value": {
                    "reward": {
                      "merchantCity": "Foster City",
                      "cardId": "05F630E5-A002-E611-B9D8-005056AB5A06",
                      "transactionSettlementDate": "12/10/2016T00:00:00.000Z",
                      "description": "SC description",
                      "rewardAmount": {
                        "currency": "840",
                        "value": "8.0"
                      },
                      "externalClientId": "test",
                      "userId": "4a4b7c5b-e992-4121-b1fe-29f3dfa7ab03",
                      "transactionId": "27524017130509",
                      "communityCode": "SANDBOX"
                    },
                    "requestDateTime": "2016-12-21T04:27:47.88Z"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.RewardRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.RewardRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.RewardRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.RewardRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.RewardResponse"
                },
                "examples": {
                  "Default": {
                    "summary": "Default",
                    "value": {
                      "rewardId": "c37c6559-bfe1-e611-a1ba-005056b225d2",
                      "responseDateTime": "2017-01-23T22:57:51.2695941Z",
                      "correlationId": "855e3fcd-0d8b-4762-956d-7c3210c1f519",
                      "responseStatus": {
                        "code": "SUCCESS",
                        "message": "Request proceed successfully without error."
                      }
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.RewardResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.RewardResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.RewardResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "request",
        "x-operationVersions": [
          {
            "label": "v1 - Latest",
            "operationPointer": "#/paths/~1vop~1v1~1rewards~1credit/post",
            "default": false
          }
        ],
        "x-hideTryIt": true
      }
    },
    "/vop/v1/communities/hierarchy": {
      "get": {
        "tags": ["Communities API"],
        "summary": "Communities Hierarchy",
        "description": "",
        "operationId": "Communities_GetCommunityHierarchy",
        "parameters": [
          {
            "name": "communityCode",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.ClientCommunityGetResponse"
                },
                "examples": {
                  "Default": {
                    "summary": "Default",
                    "value": {
                      "responseDateTime": "2018-05-08T07:29:19.0048506Z",
                      "correlationId": "ae918891-0a9a-4df5-966e-183b15a83ced",
                      "responseStatus": {
                        "code": "SUCCESS",
                        "message": "Request proceed successfully without error."
                      },
                      "communities": [
                        {
                          "levelType": "Group",
                          "communityCode": "PB29CG"
                        },
                        {
                          "levelType": "Group",
                          "communityCode": "PB29CG2"
                        },
                        {
                          "levelType": "Client",
                          "communityCode": "PB29CL"
                        },
                        {
                          "levelType": "Client",
                          "communityCode": "PB29CLIENT2"
                        },
                        {
                          "levelType": "Client",
                          "communityCode": "PB29CL2"
                        }
                      ]
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.ClientCommunityGetResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.ClientCommunityGetResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.ClientCommunityGetResponse"
                }
              }
            }
          }
        },
        "x-operationVersions": [
          {
            "label": "v1 - Latest",
            "operationPointer": "#/paths/~1vop~1v1~1communities~1hierarchy/get",
            "default": false
          }
        ],
        "x-hideTryIt": true
      }
    },
    "/vop/v1/users/addcard": {
      "post": {
        "tags": ["Users API"],
        "summary": "Save Card",
        "description": "",
        "operationId": "Users_Addcard",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.AddCardRequest"
              },
              "examples": {
                "Default": {
                  "summary": "Default",
                  "value": {
                    "card": {
                      "expirationYear": 2018,
                      "cvv": "123",
                      "nameOnCard": "Test ABC",
                      "billingZipCode": "94354",
                      "expirationMonth": 7,
                      "cardNumber": "4000090000011001"
                    },
                    "userKey": "9890124569",
                    "communityCode": "GAP"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.AddCardRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.AddCardRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.AddCardRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.AddCardRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.AddCardResponse"
                },
                "examples": {
                  "Default": {
                    "summary": "Default",
                    "value": {
                      "responseDateTime": "2017-03-23T04:54:52.9846102Z",
                      "cardDetails": {
                        "productId": "A",
                        "cardId": "0792bb87-670d-e711-a1ba-005056b225d2",
                        "productTypeCategory": "Credit",
                        "cardLast4": "1001",
                        "cardStatus": "New",
                        "productIdDescription": "Visa Traditional"
                      },
                      "correlationId": "58178a14-2db2-415b-87fa-e21fe5814d57",
                      "responseStatus": {
                        "code": "SUCCESS",
                        "message": "Request proceed successfully without error.",
                        "responseStatusDetails": []
                      }
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.AddCardResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.AddCardResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.AddCardResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "request",
        "x-operationVersions": [
          {
            "label": "v1 - Latest",
            "operationPointer": "#/paths/~1vop~1v1~1users~1addcard/post",
            "default": false
          }
        ],
        "x-hideTryIt": true
      }
    },
    "/vop/v1/users/getusersbycarddetail": {
      "post": {
        "tags": ["Users API"],
        "summary": "Get Users By Card Detail",
        "description": "API to get users for an enrolled card\r\n\r\nCard Details types: PAN, ServiceKey or ServiceRecordId",
        "operationId": "Users_GetUsersByCardDetail",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.GetUsersByCardDetailRequest"
              },
              "examples": {
                "Request Sample 2": {
                  "summary": "Request Sample 2",
                  "value": {
                    "CardDetail": "1047921941",
                    "CardDetailType": "ServiceKey",
                    "communityCode": "AUTOCOMM01"
                  }
                },
                "Request Sample 3": {
                  "summary": "Request Sample 3",
                  "value": {
                    "CardDetail": "0507842c-2fa0-ec11-a9f9-00155d345164",
                    "CardDetailType": "ServiceRecordId",
                    "communityCode": "AUTOCOMM01"
                  }
                },
                "Default": {
                  "summary": "Default",
                  "value": {
                    "CardDetail": "4658977371150002",
                    "CardDetailType": "PAN",
                    "communityCode": "AUTOCOMM01"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.GetUsersByCardDetailRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.GetUsersByCardDetailRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.GetUsersByCardDetailRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.GetUsersByCardDetailRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.GetUsersByCardDetailResponse"
                },
                "examples": {
                  "Default": {
                    "summary": "Default",
                    "value": {
                      "responseDateTime": "2022-04-26T10:05:12.3137421Z",
                      "correlationId": "ed1f6c5f-c562-4660-8988-1c381ec628a9",
                      "responseStatus": {
                        "code": "SUCCESS",
                        "message": "Request proceed successfully without error."
                      },
                      "enrollmentRecords": [
                        {
                          "communityTermsVersion": "1.1",
                          "userStatus": "Active",
                          "cardDetails": [
                            {
                              "ProductIdDescription": "Visa Traditional Rewards",
                              "ProductTypeCategory": "Credit",
                              "ServiceKey": "1047921941",
                              "ProductId": "B",
                              "CardId": "0507842c-2fa0-ec11-a9f9-00155d345164",
                              "CardLast4": "0002",
                              "CardStatus": "Existing"
                            }
                          ],
                          "userPreferences": {
                            "PreferredCategoryCodes": [],
                            "TimeZoneId": "Pacific Standard Time",
                            "TimeZoneShortCode": "PST",
                            "LanguageId": "en-US"
                          },
                          "cardHolderDetails": {
                            "isEmailPreferred": true,
                            "membershipNumber": "123456",
                            "lastName": "Automation Last Name",
                            "firstName": "Automation First Name",
                            "isDeleted": false,
                            "enrolledDate": "2022-03-10T05:02:29.497",
                            "externalUserId": "356456",
                            "isSmsPreferred": true,
                            "promoCode": "EESTEST",
                            "contacts": [
                              {
                                "ContactType": 0,
                                "ContactVerified": false,
                                "CountryCode": "1"
                              },
                              {
                                "ContactType": 1,
                                "ContactVerified": false,
                                "CountryCode": ""
                              }
                            ]
                          },
                          "userProfileId": "5c461b69-f1f5-42c7-a2a1-7cb2c3f159ca",
                          "userKey": "1231231238",
                          "communityCode": "AUTOCOMM01"
                        },
                        {
                          "communityTermsVersion": "1.1",
                          "userStatus": "Active",
                          "cardDetails": [
                            {
                              "ProductIdDescription": "Visa Traditional Rewards",
                              "ProductTypeCategory": "Credit",
                              "ServiceKey": "1047921941",
                              "ProductId": "B",
                              "CardId": "0507842c-2fa0-ec11-a9f9-00155d345164",
                              "CardLast4": "0002",
                              "CardStatus": "Existing"
                            }
                          ],
                          "userPreferences": {
                            "PreferredCategoryCodes": [],
                            "TimeZoneId": "Pacific Standard Time",
                            "TimeZoneShortCode": "PST",
                            "LanguageId": "en-US"
                          },
                          "cardHolderDetails": {
                            "isEmailPreferred": true,
                            "membershipNumber": "123456",
                            "lastName": "Automation Last Name",
                            "firstName": "Automation First Name",
                            "isDeleted": false,
                            "enrolledDate": "2022-03-10T05:01:42.22",
                            "externalUserId": "356456",
                            "isSmsPreferred": true,
                            "promoCode": "EESTEST",
                            "contacts": [
                              {
                                "ContactType": 0,
                                "ContactVerified": false,
                                "CountryCode": "1"
                              },
                              {
                                "ContactType": 1,
                                "ContactVerified": false,
                                "CountryCode": ""
                              }
                            ]
                          },
                          "userProfileId": "ebd9809f-e8e3-4157-8d26-e13b5a4e5eb1",
                          "userKey": "1231231237",
                          "communityCode": "AUTOCOMM01"
                        }
                      ]
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.GetUsersByCardDetailResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.GetUsersByCardDetailResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.GetUsersByCardDetailResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "getUsersByCardDetailRequest",
        "x-operationVersions": [
          {
            "label": "v1 - Latest",
            "operationPointer": "#/paths/~1vop~1v1~1users~1getusersbycarddetail/post",
            "default": false
          }
        ],
        "x-hideTryIt": true
      }
    },
    "/vop/v1/users/enroll": {
      "post": {
        "tags": ["Users API"],
        "summary": "Enroll User",
        "description": "",
        "operationId": "Users_Enroll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.EnrollRequest"
              },
              "examples": {
                "Default": {
                  "summary": "Default",
                  "value": {
                    "communityTermsVersion": "1",
                    "correlationId": "ce708e6a-fd5f-48cc-b9ff-ce518a6fda1a",
                    "userDetails": {
                      "membershipNumber": "123496",
                      "cards": [
                        {
                          "expirationYear": "2020",
                          "cvv2": "775",
                          "nameOnCard": "US-BANK",
                          "billingZipCode": "11901",
                          "expirationMonth": "12",
                          "cardNumber": "4111348293334910"
                        }
                      ],
                      "userAttributes": [
                        {
                          "name": "test1",
                          "value": "test2"
                        }
                      ],
                      "referrerId": "45561",
                      "externalUserId": "356086",
                      "timeZoneId": "Pacific Standard Time",
                      "languageId": "en-US",
                      "promoCode": "45168",
                      "userKey": "9722108549",
                      "contacts": [
                        {
                          "countryCode": "1",
                          "isPreferred": "true",
                          "type": "SMS",
                          "value": "9722108549",
                          "isContactVerified": "false"
                        }
                      ],
                      "communityCode": "SANDBOX"
                    }
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.EnrollRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.EnrollRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.EnrollRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.EnrollRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.EnrollResponse"
                },
                "examples": {
                  "Default": {
                    "summary": "Default",
                    "value": {
                      "responseDateTime": "2017-03-20T14:40:21.7406005Z",
                      "correlationId": "ce708e6a-fd5f-48cc-b9ff-ce518a6fda1a",
                      "responseStatus": {
                        "code": "SUCCESS",
                        "message": "Request proceed successfully without error.",
                        "responseStatusDetails": []
                      },
                      "userDetails": {
                        "cards": [
                          {
                            "cardId": "fb275b23-7b0d-e711-a1ba-005056b225d2",
                            "cardLast4": "4910",
                            "cardStatus": "New"
                          }
                        ],
                        "userStatus": 1,
                        "enrollDateTime": "2017-03-20T14:40:18.81",
                        "userAttributes": [
                          {
                            "name": "test1",
                            "value": "test2"
                          }
                        ],
                        "referrerId": "45561",
                        "timeZoneId": "Pacific Standard Time",
                        "timeZoneShortCode": "PST",
                        "languageId": "en-US",
                        "userId": "d3166b34-6453-4ff6-a3d2-d04e68c2d6d1",
                        "userKey": "9722108549",
                        "membershipNumber": "123496",
                        "externalUserId": "356086",
                        "promoCode": "45168",
                        "contacts": [
                          {
                            "countryCode": "1",
                            "isPreferred": true,
                            "value": "9722108549",
                            "isContactVerified": false
                          }
                        ],
                        "communityCode": "NEWRCMUTY"
                      }
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.EnrollResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.EnrollResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.EnrollResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "request",
        "x-operationVersions": [
          {
            "label": "v1 - Latest",
            "operationPointer": "#/paths/~1vop~1v1~1users~1enroll/post",
            "default": false
          }
        ],
        "x-hideTryIt": true
      }
    },
    "/vop/v1/users/gettransaction": {
      "post": {
        "tags": ["Users API"],
        "summary": "Get User Transactions",
        "description": "",
        "operationId": "Users_GetUserTransactions",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.TransactionRequest"
              },
              "examples": {
                "Default": {
                  "summary": "Default",
                  "value": {
                    "transactionAmount": 17,
                    "transactionDate": "2018-03-14 14:40:11.000",
                    "userKey": "tes8t88@test.com",
                    "cardLast4": 2069,
                    "merchantName": "CEFCO 2068",
                    "communityCode": "PB001"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.TransactionRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.TransactionRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.TransactionRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.TransactionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.TransactionResponse"
                },
                "examples": {
                  "Default": {
                    "summary": "Default",
                    "value": {
                      "responseDateTime": "2018-05-11T18:24:43.4990004Z",
                      "correlationId": "5fe83111-aacc-4152-8ac5-241fbe27ac0d",
                      "transactions": [
                        {
                          "merchantCity": "BROWNFIELD",
                          "vipTransactionId": "737071479554020",
                          "settlementId": "",
                          "transactionDate": "2018-03-14T14:40:11",
                          "userId": "cb69b367-4307-4cf0-aef3-250178ba8d07",
                          "userKey": "tes8t88@test.com",
                          "transactionType": "Authorization",
                          "visaStoreName": "VALERO",
                          "visaMerchantId": 32114564,
                          "merchantStateCode": "TX",
                          "transactionAmount": 17,
                          "merchantPostalCode": "79316",
                          "transactionCurrencyCode": 840,
                          "visaStoreId": 134754789,
                          "visaMerchantName": "VALERO",
                          "cardLast4": "2069"
                        },
                        {
                          "merchantCity": "BROWNFIELD",
                          "vipTransactionId": "737071479554020",
                          "settlementId": "",
                          "transactionDate": "2018-03-14T14:40:11",
                          "userId": "cb69b367-4307-4cf0-aef3-250178ba8d07",
                          "userKey": "tes8t88@test.com",
                          "transactionType": "Authorization",
                          "visaMerchantId": 0,
                          "merchantStateCode": "TX",
                          "transactionAmount": 17,
                          "merchantPostalCode": "79316",
                          "transactionCurrencyCode": 840,
                          "visaStoreId": 0,
                          "cardLast4": "2069"
                        }
                      ],
                      "responseStatus": {
                        "code": "SUCCESS",
                        "message": "Request proceed successfully without error."
                      }
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.TransactionResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.TransactionResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.TransactionResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "transactionRequest",
        "x-operationVersions": [
          {
            "label": "v1 - Latest",
            "operationPointer": "#/paths/~1vop~1v1~1users~1gettransaction/post",
            "default": false
          }
        ],
        "x-hideTryIt": true
      }
    },
    "/vop/v1/users/unenroll": {
      "post": {
        "tags": ["Users API"],
        "summary": "Unenroll User",
        "description": "",
        "operationId": "Users_UnEnroll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.UnEnrollRequest"
              },
              "examples": {
                "Default": {
                  "summary": "Default",
                  "value": {
                    "UserKey": "9722108549",
                    "correlationId": "ce708e6a-fd5f-48cc-b9ff-ce518a6fda1a",
                    "CommunityCode": "SANDBOX"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.UnEnrollRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.UnEnrollRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.UnEnrollRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.UnEnrollRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.UnEnrollResponse"
                },
                "examples": {
                  "Default": {
                    "summary": "Default",
                    "value": {
                      "responseDateTime": "2017-03-20T14:49:09.7945664Z",
                      "correlationId": "ce708e6a-fd5f-48cc-b9ff-ce518a6fda1a",
                      "responseStatus": {
                        "code": "SUCCESS",
                        "message": "Request proceed successfully without error.",
                        "responseStatusDetails": []
                      }
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.UnEnrollResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.UnEnrollResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.UnEnrollResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "request",
        "x-operationVersions": [
          {
            "label": "v1 - Latest",
            "operationPointer": "#/paths/~1vop~1v1~1users~1unenroll/post",
            "default": false
          }
        ],
        "x-hideTryIt": true
      }
    },
    "/vop/v1/users/getbyuser": {
      "post": {
        "tags": ["Users API"],
        "summary": "Get User Details by UserKey",
        "description": " ",
        "operationId": "Users_GetUserEnrollmentRecord",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.GetUserEnrollmentRecordRequest"
              },
              "examples": {
                "Default": {
                  "summary": "Default",
                  "value": {
                    "userKey": "tes8t88@test.com",
                    "communityCode": "PB001"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.GetUserEnrollmentRecordRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.GetUserEnrollmentRecordRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.GetUserEnrollmentRecordRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.GetUserEnrollmentRecordRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.GetUserEnrollmentRecordResponse"
                },
                "examples": {
                  "Default": {
                    "summary": "Default",
                    "value": {
                      "responseDateTime": "2018-05-08T07:09:57.5589149Z",
                      "correlationId": "1e319b77-b5b5-41d5-86c8-61b7067df279",
                      "responseStatus": {
                        "code": "SUCCESS",
                        "message": "Request proceed successfully without error."
                      },
                      "enrollmentRecord": {
                        "communityTermsVersion": "1",
                        "userStatus": "Active",
                        "cardDetails": [
                          {
                            "ProductIdDescription": "Visa Purchasing",
                            "ProductTypeCategory": "Deferred Debit",
                            "ServiceKey": "5076981017551999",
                            "ProductId": "S",
                            "CardId": "39e86f1e-2fcb-e711-8b62-005056b225d2",
                            "CardLast4": "2069",
                            "CardStatus": "Existing"
                          }
                        ],
                        "userPreferences": {
                          "PreferredCategoryCodes": [],
                          "TimeZoneId": "Pacific Standard Time",
                          "TimeZoneShortCode": "PST",
                          "LanguageId": "en-US"
                        },
                        "cardHolderDetails": {
                          "isEmailPreferred": true,
                          "membershipNumber": "",
                          "lastName": "TEST",
                          "firstName": "TSTUSR1",
                          "isDeleted": false,
                          "enrolledDate": "2017-11-17T00:34:57.313",
                          "externalUserId": "TEST12345VCN",
                          "isSmsPreferred": true,
                          "contacts": [
                            {
                              "ContactType": 0,
                              "ConfirmationCode": "",
                              "ContactVerified": true,
                              "CountryCode": "1"
                            },
                            {
                              "ContactType": 1,
                              "ContactVerified": false,
                              "CountryCode": ""
                            },
                            {
                              "ContactType": 1,
                              "ContactVerified": false,
                              "CountryCode": ""
                            }
                          ]
                        },
                        "browserName": "",
                        "userProfileId": "cb69b367-4307-4cf0-aef3-250178ba8d07",
                        "userKey": "tes8t88@test.com",
                        "communityCode": "PB001"
                      }
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.GetUserEnrollmentRecordResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.GetUserEnrollmentRecordResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.GetUserEnrollmentRecordResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "request",
        "x-operationVersions": [
          {
            "label": "v1 - Latest",
            "operationPointer": "#/paths/~1vop~1v1~1users~1getbyuser/post",
            "default": false
          }
        ],
        "x-hideTryIt": true
      }
    },
    "/vop/v1/users/deletecard": {
      "post": {
        "tags": ["Users API"],
        "summary": "Delete Card",
        "description": "",
        "operationId": "Users_DeleteCard",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.DeleteCardRequest"
              },
              "examples": {
                "Default": {
                  "summary": "Default",
                  "value": {
                    "userId": "ae45b256-d677-4b8a-bc49-f1b3a6df8bd8",
                    "card": {
                      "cardId": "70ca44b6-fc09-e711-a1ba-005056b225d2"
                    },
                    "userKey": "9442108541",
                    "communityCode": "NewRCmuty"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.DeleteCardRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.DeleteCardRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.DeleteCardRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.DeleteCardRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.DeleteCardResponse"
                },
                "examples": {
                  "Default": {
                    "summary": "Default",
                    "value": {
                      "responseDateTime": "2017-03-16T03:57:56.262101Z",
                      "correlationId": "ce708e6a-fd5f-48cc-b9ff-ce518a6fda1a",
                      "responseStatus": {
                        "code": "SUCCESS",
                        "message": "Request proceed successfully without error.",
                        "responseStatusDetails": []
                      },
                      "userDetails": {
                        "cards": [
                          {
                            "cardId": "70ca44b6-fc09-e711-a1ba-005056b225d2",
                            "cardLast4": "4810",
                            "cardStatus": "New"
                          }
                        ],
                        "userStatus": 1,
                        "enrollDateTime": "2017-03-16T03:57:54.857",
                        "userAttributes": [
                          {
                            "name": "test1",
                            "value": "test2"
                          }
                        ],
                        "referrerId": "45261",
                        "timeZoneId": "Pacific Standard Time",
                        "timeZoneShortCode": "PST",
                        "languageId": "en-US",
                        "userId": "ae45b256-d677-4b8a-bc49-f1b3a6df8bd8",
                        "userKey": "9442108541",
                        "membershipNumber": "123456",
                        "externalUserId": "356056",
                        "promoCode": "45268",
                        "contacts": [
                          {
                            "countryCode": "1",
                            "isPreferred": true,
                            "value": "9442108541",
                            "isContactVerified": false
                          }
                        ],
                        "communityCode": "NEWRCMUTY"
                      }
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.DeleteCardResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.DeleteCardResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.DeleteCardResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "request",
        "x-operationVersions": [
          {
            "label": "v1 - Latest",
            "operationPointer": "#/paths/~1vop~1v1~1users~1deletecard/post",
            "default": false
          }
        ],
        "x-hideTryIt": true
      }
    },
    "/vop/v1/merchants/groups/deletemerchant": {
      "post": {
        "tags": ["Merchants API"],
        "summary": "Delete Visa Merchant Identifiers from Merchant Group",
        "description": " ",
        "operationId": "Merchants_DeleteMerchantFromMerchantGroup",
        "requestBody": {
          "description": "Save Merchant Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.SaveMerchantInMerchantGroupRequest"
              },
              "examples": {
                "Default": {
                  "summary": "Default",
                  "value": {
                    "merchantGroupName": "MGroup1",
                    "merchantDetails": [
                      {
                        "visaMerchantId": "35992665",
                        "visaStoreId": "162754547"
                      },
                      {
                        "endDateInMerchantGroup": "2018-03-10T18:00:00.000Z",
                        "visaMerchantId": "29992901",
                        "startDateInMerchantGroup": "2017-03-10T18:00:00.000Z",
                        "externalId": "EXTERNALID123",
                        "visaStoreId": "160365013"
                      }
                    ],
                    "communityCode": "PB29CLIENT2"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.SaveMerchantInMerchantGroupRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.SaveMerchantInMerchantGroupRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.SaveMerchantInMerchantGroupRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.SaveMerchantInMerchantGroupRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.SaveMerchantInMerchantGroupResponse"
                },
                "examples": {
                  "Default": {
                    "summary": "Default",
                    "value": {
                      "responseDateTime": "2017-03-17T19:07:59.893006Z",
                      "correlationId": "4cfe27ff-5d9a-4112-b959-9f8fa93570a6",
                      "responseStatus": {
                        "code": "SUCCESS",
                        "message": "Request proceed successfully without error."
                      }
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.SaveMerchantInMerchantGroupResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.SaveMerchantInMerchantGroupResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.SaveMerchantInMerchantGroupResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "request",
        "x-operationVersions": [
          {
            "label": "v1 - Latest",
            "operationPointer": "#/paths/~1vop~1v1~1merchants~1groups~1deletemerchant/post",
            "default": false
          }
        ],
        "x-hideTryIt": true
      }
    },
    "/vop/v1/merchants/groups/add": {
      "post": {
        "tags": ["Merchants API"],
        "summary": "Create Merchant Group",
        "description": " ",
        "operationId": "Merchants_AddMerchantGroup",
        "requestBody": {
          "description": "Merchant Group Request object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.AddMerchantGroupRequest"
              },
              "examples": {
                "Default": {
                  "summary": "Default",
                  "value": {
                    "merchantGroups": [
                      {
                        "name": "MGroup1"
                      }
                    ],
                    "type": "MerchantInfo",
                    "communityCode": "PB29CLIENT2"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.AddMerchantGroupRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.AddMerchantGroupRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.AddMerchantGroupRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.AddMerchantGroupRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.AddMerchantGroupResponse"
                },
                "examples": {
                  "Default": {
                    "summary": "Default",
                    "value": {
                      "responseDateTime": "2017-03-17T17:33:00.6886853Z",
                      "correlationId": "7162fe09-7bdf-443b-b021-8504c4b101fa",
                      "responseStatus": {
                        "code": "SUCCESS",
                        "message": "Request proceed successfully without error."
                      }
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.AddMerchantGroupResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.AddMerchantGroupResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.AddMerchantGroupResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "request",
        "x-operationVersions": [
          {
            "label": "v1 - Latest",
            "operationPointer": "#/paths/~1vop~1v1~1merchants~1groups~1add/post",
            "default": false
          }
        ],
        "x-hideTryIt": true
      }
    },
    "/vop/v1/merchants/groups": {
      "get": {
        "tags": ["Merchants API"],
        "summary": "Search Merchant Group Details",
        "description": " ",
        "operationId": "Merchants_GetCommunityMerchantGroupDetails",
        "parameters": [
          {
            "name": "communityCode",
            "in": "query",
            "description": "Client community code, must be exact match with the community code (CL level) provided by Visa. : mandatory",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fromDateTime",
            "in": "query",
            "description": "Start date for the values requested. Unix date/time. For example, 1622651177 represents Wednesday, June 2, 2022 4:26:17 PM : optional",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of records to be returned back in the response. Maximum PageSize is 5000. If left blank, the response defaults to 5000 as well : optional",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "\"Start index for the values requested. Default value is 0. For merchant groups with more than 5000 records, use this field to iterate through entire merchant group\" : optional",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "merchantGroupName",
            "in": "query",
            "description": "Merchant Group name, must be an exact match to existing merchant group name. This field is case sensitive. : optional",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.CommunityMerchantGroupDetailsGetResponse"
                },
                "examples": {
                  "Default": {
                    "summary": "Default",
                    "value": {
                      "syncTime": 636255821980000000,
                      "countOfRemainingRecords": 0,
                      "merchantGroups": [
                        {
                          "createdDate": "2017-03-14T18:27:31.593",
                          "createdBy": "CYBS",
                          "name": "VMIDVSIDUI",
                          "modifiedDate": "2017-03-14T18:51:36.117",
                          "modifiedBy": "cybs",
                          "id": "1a723eac-6cd0-4dc9-91c0-e54b94ba447b",
                          "merchantDetails": [
                            {
                              "visaStoreName": "STARBUCKS",
                              "visaMerchantId": "18491288",
                              "visaMerchantEnterpriseName": "KROGER",
                              "isDeleted": false,
                              "createdBy": "cybs",
                              "modifiedDate": "2017-03-14T18:51:36.117",
                              "externalId": "AGOAGE",
                              "visaStoreId": "166295805",
                              "modifiedBy": "cybs",
                              "visaMerchantName": "FRED MEYER"
                            }
                          ],
                          "communityCode": "PB29CLIENT2",
                          "merchantGroupType": "MerchantInfo"
                        }
                      ],
                      "responseDateTime": "2017-03-20T04:49:58.7775075Z",
                      "endIndex": 1,
                      "correlationId": "2452306c-9e09-417c-b027-fe89f30331f6",
                      "responseStatus": {
                        "code": "SUCCESS",
                        "message": "Request proceed successfully without error."
                      }
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.CommunityMerchantGroupDetailsGetResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.CommunityMerchantGroupDetailsGetResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.CommunityMerchantGroupDetailsGetResponse"
                }
              }
            }
          }
        },
        "x-operationVersions": [
          {
            "label": "v1 - Latest",
            "operationPointer": "#/paths/~1vop~1v1~1merchants~1groups/get",
            "default": false
          }
        ],
        "x-hideTryIt": true
      }
    },
    "/vop/v1/merchants/groups/delete": {
      "post": {
        "tags": ["Merchants API"],
        "summary": "Delete Merchant Group",
        "description": " ",
        "operationId": "Merchants_DeleteMerchantGroup",
        "requestBody": {
          "description": "Delete Merchant Group Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.MerchantGroupDeleteRequest"
              },
              "examples": {
                "Default": {
                  "summary": "Default",
                  "value": {
                    "merchantGroups": [
                      {
                        "name": "Merchant Group 12"
                      }
                    ],
                    "type": "MerchantInfo",
                    "deleteAllMerchants": true,
                    "communityCode": "GAPCL"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.MerchantGroupDeleteRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.MerchantGroupDeleteRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.MerchantGroupDeleteRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.MerchantGroupDeleteRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.MerchantGroupDeleteResponse"
                },
                "examples": {
                  "Default": {
                    "summary": "Default",
                    "value": {
                      "responseDateTime": "2020-06-04T01:36:32.6769542Z",
                      "correlationId": "e311dc6f-07cb-40db-adfc-02563ab19d66",
                      "responseStatus": {
                        "code": "SUCCESS",
                        "message": "Request proceed successfully without error."
                      }
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.MerchantGroupDeleteResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.MerchantGroupDeleteResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.MerchantGroupDeleteResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "request",
        "x-operationVersions": [
          {
            "label": "v1 - Latest",
            "operationPointer": "#/paths/~1vop~1v1~1merchants~1groups~1delete/post",
            "default": false
          }
        ],
        "x-hideTryIt": true
      }
    },
    "/vop/v1/merchants/groups/addacquirer": {
      "post": {
        "tags": ["Merchants API"],
        "summary": "Add Acquirer Details to Merchant Group",
        "description": " ",
        "operationId": "Merchants_AddAcquirerToMerchantGroup",
        "requestBody": {
          "description": "Save Acquirer Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.SaveAcquirerDetailsInMerchantGroupRequest"
              },
              "examples": {
                "Default": {
                  "summary": "Default",
                  "value": {
                    "responseDateTime": "2017-03-17T18:04:23.5809557Z",
                    "correlationId": "17cdd375-aed6-4a7a-a9b7-e7e72796a50d",
                    "responseStatus": {
                      "code": "SUCCESS",
                      "message": "Request proceed successfully without error."
                    }
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.SaveAcquirerDetailsInMerchantGroupRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.SaveAcquirerDetailsInMerchantGroupRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.SaveAcquirerDetailsInMerchantGroupRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.SaveAcquirerDetailsInMerchantGroupRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.SaveAcquirerDetailsInMerchantGroupResponse"
                },
                "examples": {
                  "Default": {
                    "summary": "Default",
                    "value": {
                      "responseDateTime": "2017-03-17T18:04:23.5809557Z",
                      "correlationId": "17cdd375-aed6-4a7a-a9b7-e7e72796a50d",
                      "responseStatus": {
                        "code": "SUCCESS",
                        "message": "Request proceed successfully without error."
                      }
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.SaveAcquirerDetailsInMerchantGroupResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.SaveAcquirerDetailsInMerchantGroupResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.SaveAcquirerDetailsInMerchantGroupResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "request",
        "x-operationVersions": [
          {
            "label": "v1 - Latest",
            "operationPointer": "#/paths/~1vop~1v1~1merchants~1groups~1addacquirer/post",
            "default": false
          }
        ],
        "x-hideTryIt": true
      }
    },
    "/vop/v1/merchants/onboard": {
      "post": {
        "tags": ["Merchants API"],
        "summary": "Onboard Merchants",
        "description": " ",
        "operationId": "Merchants_Post",
        "requestBody": {
          "description": "Takes MerchantOnboardRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.MerchantOnboardRequest"
              },
              "examples": {
                "Default": {
                  "summary": "Default",
                  "value": {
                    "merchantDetails": [
                      {
                        "visaMerchantId": "29992901",
                        "visaStoreId": "166596266"
                      }
                    ],
                    "communityCode": "SANDBOX"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.MerchantOnboardRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.MerchantOnboardRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.MerchantOnboardRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.MerchantOnboardRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.MerchantOnboardResponse"
                },
                "examples": {
                  "Default": {
                    "summary": "Default",
                    "value": {
                      "responseDateTime": "2017-01-25T06:16:18.8969192Z",
                      "correlationId": "2b11d209-3b7f-4307-963d-dee25027dbf9",
                      "responseStatus": {
                        "code": "SUCCESS",
                        "message": "Request proceed successfully without error."
                      },
                      "StatusCode": 0
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.MerchantOnboardResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.MerchantOnboardResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.MerchantOnboardResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "request",
        "x-operationVersions": [
          {
            "label": "v1 - Latest",
            "operationPointer": "#/paths/~1vop~1v1~1merchants~1onboard/post",
            "default": false
          }
        ],
        "x-hideTryIt": true
      }
    },
    "/vop/v1/merchants/groups/deleteacquirer": {
      "post": {
        "tags": ["Merchants API"],
        "summary": "Delete Acquirer Details from Merchant Group",
        "description": " ",
        "operationId": "Merchants_DeleteAcquirerFromMerchantGroup",
        "requestBody": {
          "description": "Save Acquirer Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.SaveAcquirerDetailsInMerchantGroupRequest"
              },
              "examples": {
                "Default": {
                  "summary": "Default",
                  "value": {
                    "responseDateTime": "2017-03-17T18:32:12.6898499Z",
                    "correlationId": "67b25735-507d-4236-b62c-6034f1a0cd10",
                    "responseStatus": {
                      "code": "SUCCESS",
                      "message": "Request proceed successfully without error."
                    }
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.SaveAcquirerDetailsInMerchantGroupRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.SaveAcquirerDetailsInMerchantGroupRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.SaveAcquirerDetailsInMerchantGroupRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.SaveAcquirerDetailsInMerchantGroupRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.SaveAcquirerDetailsInMerchantGroupResponse"
                },
                "examples": {
                  "Default": {
                    "summary": "Default",
                    "value": {
                      "merchantGroupName": "MGrosdsdsdsup2Acq",
                      "merchantAcquirerDetails": [
                        {
                          "endDateInMerchantGroup": "2018-03-10T18:00:00.000Z",
                          "cardAcceptorId": "0003154545123",
                          "startDateInMerchantGroup": "2017-03-10T18:00:00.000Z",
                          "externalId": "Ext45",
                          "acquirerBin": "123457"
                        }
                      ],
                      "communityCode": "PB29CLIENT2"
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.SaveAcquirerDetailsInMerchantGroupResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.SaveAcquirerDetailsInMerchantGroupResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.SaveAcquirerDetailsInMerchantGroupResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "request",
        "x-operationVersions": [
          {
            "label": "v1 - Latest",
            "operationPointer": "#/paths/~1vop~1v1~1merchants~1groups~1deleteacquirer/post",
            "default": false
          }
        ],
        "x-hideTryIt": true
      }
    },
    "/vop/v1/merchants/search/details": {
      "get": {
        "tags": ["Merchants API"],
        "summary": "Search for Visa Merchant or Store Identifiers",
        "description": " ",
        "operationId": "Merchants_GetMerchantSearchDetails",
        "parameters": [
          {
            "name": "communityCode",
            "in": "query",
            "description": "Client community code, must be exact match with the community code (CG level) provided by Visa. : mandatory",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "merchantSearchType",
            "in": "query",
            "description": "Possible values \"Exact' or \"Relative\". \"Exact\" value forces all the input criteria to match for search results. When search type value is \"Relative\", the response includes merchant details where some or all of the input criteria matched : mandatory",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "merchantId",
            "in": "query",
            "description": "Visa defined merchant id : optional",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "merchantName",
            "in": "query",
            "description": "Conditional. Required when MerchantCountryCode is supplied : optional",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Visa defined store id : optional",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "merchantUrl",
            "in": "query",
            "description": "URL of the merchant. : optional",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessRegistrationId",
            "in": "query",
            "description": "Business Registration ID / Tax ID: optional",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cardAcceptorId",
            "in": "query",
            "description": "The Card Acceptor ID (CAID) is a unique identifier number for the originator of transfers. Typically, an ID is between 1 and 15 characters and is assigned for each store location : optional",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "acquirerBin",
            "in": "query",
            "description": "Acquiring Identifier, formerly known as Acquiring BIN. Can be used in combination with Card Acceptor ID to search for specific store location : optional",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "merchantPhoneNumber",
            "in": "query",
            "description": "Merchant Phone Number : optional",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "acquirerBid",
            "in": "query",
            "description": "Acquirer Business Identification Number (BID). Can be used in combination with Acquirer MID to search for specific store location : optional",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "acquirerMid",
            "in": "query",
            "description": "Acquirer Merchant Identification Number (MID) : optional",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "merchantCountryCode",
            "in": "query",
            "description": "Merchant Country Code in 3 digit numeric code, for example 840 for US. : optional",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "merchantCity",
            "in": "query",
            "description": "City of the merchant : optional",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "merchantState",
            "in": "query",
            "description": "State of the merchant : optional",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "merchantPostalCode",
            "in": "query",
            "description": "Postal code of the merchant : optional",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "merchantStreetAddress",
            "in": "query",
            "description": "Street address of the merchant : optional",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "returnMatchIndicators",
            "in": "query",
            "description": "If set to \"true\", response will include the input attributes that are exact with the merchant entries in the response : optional",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.MerchantSearchDetailsResponse"
                },
                "examples": {
                  "Default": {
                    "summary": "Default",
                    "value": {
                      "responseDateTime": "2018-05-08T07:01:05.0027011Z",
                      "numberOfMatchedRecords": 1,
                      "correlationId": "f63579b7-8787-4327-8578-db06d75b74ba",
                      "responseStatus": {
                        "code": "SUCCESS",
                        "message": "Request proceed successfully without error."
                      },
                      "merchantDetails": [
                        {
                          "merchantPhoneNumber": [],
                          "lastTranDateRange": "In last 90 days",
                          "matchIndicators": ["acquirerMid"],
                          "merchantCity": "POWELL",
                          "merchantCountryCode": 840,
                          "firstTranDateRange": "In more than 365 days",
                          "merchantState": "OH",
                          "DBAName": ["THE MANNA INSTITUTE"],
                          "visaStoreName": "MANNA INSTITUTE",
                          "visaMerchantId": "35905484",
                          "merchantPostalCode": "43065-6080",
                          "merchantCategoryCode": ["8011"],
                          "visaStoreId": "160130727",
                          "merchantStreetAddress": "3779 ATTUCKS DR",
                          "visaMerchantName": "MANNA INSTITUTE",
                          "paymentFacilitatorName": [],
                          "merchantUrl": []
                        }
                      ]
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.MerchantSearchDetailsResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.MerchantSearchDetailsResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.MerchantSearchDetailsResponse"
                }
              }
            }
          }
        },
        "x-operationVersions": [
          {
            "label": "v1 - Latest",
            "operationPointer": "#/paths/~1vop~1v1~1merchants~1search~1details/get",
            "default": false
          }
        ],
        "x-hideTryIt": true
      }
    },
    "/vop/v1/merchants/search/transaction": {
      "post": {
        "tags": ["Merchants API"],
        "summary": "Search Merchant by Transaction",
        "description": " ",
        "operationId": "Merchants_SearchMerchantByTransaction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.MerchantSearchRequest"
              },
              "examples": {
                "Default": {
                  "summary": "Default",
                  "value": {
                    "merchantCity": "08",
                    "merchantCountryCode": "840",
                    "userAlias": "PAYPAL",
                    "transactionAmount": "1200.00",
                    "merchantPostalCode": "913040000",
                    "merchantAddress": "Test",
                    "transactionDate": "2019-06-25",
                    "merchantState": "06",
                    "userCommunityCode": "KUMSCOMM",
                    "transactionId": "310520192002",
                    "merchantName": "INFINITY STAMPS INC. DBA ",
                    "communityCode": "GAPCL"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.MerchantSearchRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.MerchantSearchRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.MerchantSearchRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.MerchantSearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.SearchMerchantResponse"
                },
                "examples": {
                  "Default": {
                    "summary": "Default",
                    "value": {
                      "responseDateTime": "2017-03-22T21:12:24.4648707Z",
                      "correlationId": "1c054b93-4f28-48cd-be43-79e3b38d028c",
                      "responseStatus": {
                        "code": "SUCCESS",
                        "message": "Request proceed successfully without error."
                      },
                      "merchantDetails": [
                        {
                          "visaStoreName": "AM ZON UK RET IL",
                          "visaMerchantId": "11764203",
                          "visaMerchantEnterpriseName": "AMAZON.COM",
                          "isDeleted": false,
                          "visaStoreId": "170089787",
                          "isPOSRedemptionCapable": false,
                          "visaStoreEnrichedAddress": {
                            "city": "UNKNOWN_CITY",
                            "address1": "UNKNOWN_STR",
                            "countryCode": "442",
                            "postalCode": "0",
                            "state": "UNKNOWN_STATE"
                          },
                          "posRedemptionFeatures": {
                            "isPretaxCapable": false,
                            "isPerUnitDiscountCapable": false
                          },
                          "visaMerchantName": "AMAZON.COM"
                        }
                      ]
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.SearchMerchantResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.SearchMerchantResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.SearchMerchantResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "value",
        "x-operationVersions": [
          {
            "label": "v1 - Latest",
            "operationPointer": "#/paths/~1vop~1v1~1merchants~1search~1transaction/post",
            "default": false
          }
        ],
        "x-hideTryIt": true
      }
    },
    "/vop/v1/merchants/groups/addmerchant": {
      "post": {
        "tags": ["Merchants API"],
        "summary": "Add Visa Merchant Identifiers to Merchant Group",
        "description": " ",
        "operationId": "Merchants_AddMerchantToMerchantGroup",
        "requestBody": {
          "description": "Save Merchant Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.SaveMerchantInMerchantGroupRequest"
              },
              "examples": {
                "Default": {
                  "summary": "Default",
                  "value": {
                    "merchantGroupName": "MGroup1",
                    "merchantDetails": [
                      {
                        "endDateInMerchantGroup": "2018-03-10T18:00:00.000Z",
                        "visaMerchantId": "35992665",
                        "startDateInMerchantGroup": "2017-03-17T18:00:00.000Z",
                        "externalId": "ExternalID123",
                        "visaStoreId": "162754547"
                      }
                    ],
                    "communityCode": "PB29CLIENT2"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.SaveMerchantInMerchantGroupRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.SaveMerchantInMerchantGroupRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.SaveMerchantInMerchantGroupRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.SaveMerchantInMerchantGroupRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.SaveMerchantInMerchantGroupResponse"
                },
                "examples": {
                  "Default": {
                    "summary": "Default",
                    "value": {
                      "responseDateTime": "2017-03-17T17:54:48.8324866Z",
                      "correlationId": "3b8aa373-20dc-46ca-9c7a-acb78086e654",
                      "responseStatus": {
                        "code": "SUCCESS",
                        "message": "Request proceed successfully without error."
                      }
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.SaveMerchantInMerchantGroupResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.SaveMerchantInMerchantGroupResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.SaveMerchantInMerchantGroupResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "request",
        "x-operationVersions": [
          {
            "label": "v1 - Latest",
            "operationPointer": "#/paths/~1vop~1v1~1merchants~1groups~1addmerchant/post",
            "default": false
          }
        ],
        "x-hideTryIt": true
      }
    },
    "/vop/v1/activations/getbyuser": {
      "post": {
        "tags": ["Offers API"],
        "summary": "Retrieve Activation Data by User details",
        "description": " ",
        "operationId": "Activations_GetOfferActivationDeactivationByUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.OfferActivityByUserRequest"
              },
              "examples": {
                "Default": {
                  "summary": "Default",
                  "value": {
                    "fromDate": "2016-01-30T01:20:03Z",
                    "startIndex": 0,
                    "operationStatus": "all",
                    "toDate": "2018-01-30T01:20:03Z",
                    "pageSize": 2,
                    "userId": "18470a1a-bdab-4f62-a408-afffb4a660dd",
                    "userkey": "",
                    "communityCode": "PB001"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.OfferActivityByUserRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.OfferActivityByUserRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.OfferActivityByUserRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.OfferActivityByUserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.OfferActivityByUserResponse"
                },
                "examples": {
                  "Default": {
                    "summary": "Default",
                    "value": {
                      "countOfRemainingRecords": 6875,
                      "responseDateTime": "2018-05-08T07:13:05.1657175Z",
                      "endIndex": 2,
                      "offerOperationDetails": [
                        {
                          "operationStatus": "Success",
                          "operationStatusMessage": "Validation Successful",
                          "operationDateTime": "2017-11-03T17:59:51.387",
                          "offerId": 667919,
                          "operationType": "ActivateOffer",
                          "operationProperty": [],
                          "activationId": "0ec4d783-49c8-4b49-a8f2-122d10768511"
                        },
                        {
                          "operationStatus": "Success",
                          "operationStatusMessage": "Validation Successful",
                          "operationDateTime": "2017-10-26T19:05:41.443",
                          "offerId": 667919,
                          "operationType": "ActivateOffer",
                          "operationProperty": [],
                          "activationId": "7990c322-5782-4f83-a541-29109d89a080"
                        }
                      ],
                      "correlationId": "ac8e89ba-0477-47e6-9044-a60fc03ec433",
                      "responseStatus": {
                        "code": "SUCCESS",
                        "message": "Request proceed successfully without error."
                      },
                      "userId": "18470a1a-bdab-4f62-a408-afffb4a660dd",
                      "communityCode": "PB001"
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.OfferActivityByUserResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.OfferActivityByUserResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.OfferActivityByUserResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "request",
        "x-operationVersions": [
          {
            "label": "v1 - Latest",
            "operationPointer": "#/paths/~1vop~1v1~1activations~1getbyuser/post",
            "default": false
          }
        ],
        "x-hideTryIt": true
      }
    },
    "/vop/v1/offers/community": {
      "get": {
        "tags": ["Offers API"],
        "summary": "Offer Community",
        "description": "API to Get offers and event details by community",
        "operationId": "Offers_GetOffersByCommunity",
        "parameters": [
          {
            "name": "communityCode",
            "in": "query",
            "description": "Community Code : mandatory",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offerId",
            "in": "query",
            "description": "Offer Id : optional",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Status : optional",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.OfferDetailsResponse"
                },
                "examples": {
                  "Default": {
                    "summary": "Default",
                    "value": {
                      "responseDateTime": "2018-05-08T06:55:13.8913597Z",
                      "offerDetails": [
                        {
                          "createdDate": "2018-04-05T19:19:36.08",
                          "startDateTime": "2018-04-05T00:00:00",
                          "isEnabled": true,
                          "name": "JEEPCheckOutOffer1",
                          "offerId": 722612,
                          "description": "",
                          "endDateTime": "2019-07-27T23:59:59",
                          "communityCode": "JEEPCL"
                        },
                        {
                          "createdDate": "2018-04-05T19:23:25.013",
                          "startDateTime": "2018-04-05T07:00:00",
                          "isEnabled": true,
                          "name": "JEEPCheckOutOffer2",
                          "offerId": 722613,
                          "description": "Offer created from UI template CSC",
                          "endDateTime": "2019-04-06T06:59:59",
                          "communityCode": "JEEPCL"
                        },
                        {
                          "createdDate": "2018-04-09T22:55:27.56",
                          "startDateTime": "2018-04-09T07:00:00",
                          "isEnabled": true,
                          "name": "OfferActivation",
                          "offerId": 722614,
                          "endDateTime": "2020-04-10T06:59:59",
                          "communityCode": "JEEPCL"
                        },
                        {
                          "createdDate": "2018-04-10T22:39:50.883",
                          "startDateTime": "2018-04-10T00:00:00",
                          "isEnabled": true,
                          "name": "JEEPCheckOutOffer03",
                          "offerId": 722615,
                          "description": "",
                          "endDateTime": "2019-07-27T23:59:59",
                          "communityCode": "JEEPCL"
                        },
                        {
                          "createdDate": "2018-04-12T14:19:22.6",
                          "startDateTime": "2018-04-12T07:00:00",
                          "isEnabled": true,
                          "name": "onACT",
                          "offerId": 722616,
                          "endDateTime": "2018-04-23T06:59:59",
                          "communityCode": "JEEPCL"
                        },
                        {
                          "createdDate": "2018-04-12T23:56:08",
                          "startDateTime": "2018-04-12T07:00:00",
                          "isEnabled": true,
                          "name": "AWAAA",
                          "offerId": 722617,
                          "endDateTime": "2018-04-17T06:59:59",
                          "communityCode": "JEEPCL"
                        },
                        {
                          "createdDate": "2018-04-13T00:29:31.417",
                          "startDateTime": "2018-04-13T07:00:00",
                          "isEnabled": true,
                          "name": "sdfs",
                          "offerId": 722618,
                          "description": "fdsf",
                          "endDateTime": "2018-04-20T06:59:59",
                          "communityCode": "JEEPCL"
                        },
                        {
                          "createdDate": "2018-04-17T20:02:51.933",
                          "startDateTime": "2018-04-17T00:00:00",
                          "isEnabled": true,
                          "name": "JEEPCheckOutOffer17",
                          "offerId": 722619,
                          "description": "",
                          "endDateTime": "2019-07-27T23:59:59",
                          "communityCode": "JEEPCL"
                        },
                        {
                          "createdDate": "2018-04-23T17:58:12.1",
                          "startDateTime": "2018-04-23T07:00:00",
                          "isEnabled": true,
                          "name": "TestSecure",
                          "offerId": 722621,
                          "endDateTime": "2019-04-30T06:59:59",
                          "communityCode": "JEEPCL"
                        }
                      ],
                      "correlationId": "45d9b2c1-b80e-417d-9dfc-a2570ce28e57",
                      "responseStatus": {
                        "code": "SUCCESS",
                        "message": "Request proceed successfully without error."
                      }
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.OfferDetailsResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.OfferDetailsResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.OfferDetailsResponse"
                }
              }
            }
          }
        },
        "x-operationVersions": [
          {
            "label": "v1 - Latest",
            "operationPointer": "#/paths/~1vop~1v1~1offers~1community/get",
            "default": false
          }
        ],
        "x-hideTryIt": true
      }
    },
    "/vop/v1/deactivations/merchant": {
      "post": {
        "tags": ["Offers API"],
        "summary": "Deactivate User by Offer or Merchant",
        "description": " ",
        "operationId": "DeActivations_MerchantOfferDeActivate",
        "requestBody": {
          "description": "DeActivationRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.DeActivationRequest"
              },
              "examples": {
                "Default": {
                  "summary": "Default",
                  "value": {
                    "offerId": "1344",
                    "clientCommunityCode": "GAPCL",
                    "userId": "3260f658-ce8c-414c-9684-7de00f0e1981",
                    "activationId": "ce708e6a-fd5f-48cc-b9ff-ce518a6fda1b",
                    "communityCode": "GAP"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.DeActivationRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.DeActivationRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.DeActivationRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.DeActivationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.DeActivationResponse"
                },
                "examples": {
                  "Default": {
                    "summary": "Default",
                    "value": {
                      "responseDateTime": "2017-03-23T05:05:19.9250289Z",
                      "correlationId": "1eb2af0d-beaf-4bd8-a7eb-23501f758357",
                      "responseStatus": {
                        "code": "SUCCESS",
                        "message": "Request proceed successfully without error."
                      }
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.DeActivationResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.DeActivationResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.DeActivationResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "request",
        "x-operationVersions": [
          {
            "label": "v1 - Latest",
            "operationPointer": "#/paths/~1vop~1v1~1deactivations~1merchant/post",
            "default": false
          }
        ],
        "x-hideTryIt": true
      }
    },
    "/vop/v1/deactivations/getbyoffer": {
      "post": {
        "tags": ["Offers API"],
        "summary": "Retrieve Deactivation Data by Offer Id",
        "description": " ",
        "operationId": "DeActivations_GetDeActivatedUsersByOffer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.OfferActivityByOfferIdRequest"
              },
              "examples": {
                "Default": {
                  "summary": "Default",
                  "value": {
                    "fromDate": "2016-01-30T01:20:03Z",
                    "startIndex": 0,
                    "operationStatus": "all",
                    "toDate": "2018-01-30T01:20:03Z",
                    "offerId": "667919",
                    "pageSize": 2,
                    "communityCode": "PB001CL"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.OfferActivityByOfferIdRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.OfferActivityByOfferIdRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.OfferActivityByOfferIdRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.OfferActivityByOfferIdRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.OfferActivityByOfferIdResponse"
                },
                "examples": {
                  "Default": {
                    "summary": "Default",
                    "value": {
                      "countOfRemainingRecords": 25,
                      "responseDateTime": "2018-05-08T07:19:22.5321365Z",
                      "endIndex": 2,
                      "offerId": 667919,
                      "offerUsers": [
                        {
                          "operationStatus": "Success",
                          "operationDateTime": "2018-01-08T23:22:56.95",
                          "operationType": "DeActivateOffer",
                          "operationProperty": [],
                          "userId": "18470a1a-bdab-4f62-a408-afffb4a660dd",
                          "userKey": "l11Ap@lp.com",
                          "activationId": ""
                        },
                        {
                          "operationStatus": "Failed",
                          "operationDateTime": "2017-10-18T17:52:47.19",
                          "operationType": "DeActivateOffer",
                          "operationProperty": [],
                          "userId": "18470a1a-bdab-4f62-a408-afffb4a660dd",
                          "userKey": "l11Ap@lp.com",
                          "activationId": ""
                        }
                      ],
                      "correlationId": "4b542e68-f035-4b2d-b8f9-9d80e62f51f1",
                      "responseStatus": {
                        "code": "SUCCESS",
                        "message": "Request proceed successfully without error."
                      },
                      "communityCode": "PB001CL"
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.OfferActivityByOfferIdResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.OfferActivityByOfferIdResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.OfferActivityByOfferIdResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "request",
        "x-operationVersions": [
          {
            "label": "v1 - Latest",
            "operationPointer": "#/paths/~1vop~1v1~1deactivations~1getbyoffer/post",
            "default": false
          }
        ],
        "x-hideTryIt": true
      }
    },
    "/vop/v1/activations/getbyoffer": {
      "post": {
        "tags": ["Offers API"],
        "summary": "Retrieve Activation Data by Offer Id",
        "description": " ",
        "operationId": "Activations_GetActivatedUsersByOffer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.OfferActivityByOfferIdRequest"
              },
              "examples": {
                "Default": {
                  "summary": "Default",
                  "value": {
                    "fromDate": "2016-01-30T01:20:03Z",
                    "startIndex": 0,
                    "operationStatus": "all",
                    "toDate": "2018-01-30T01:20:03Z",
                    "offerId": "667925",
                    "pageSize": 2,
                    "communityCode": "PB001CL"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.OfferActivityByOfferIdRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.OfferActivityByOfferIdRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.OfferActivityByOfferIdRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.OfferActivityByOfferIdRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.OfferActivityByOfferIdResponse"
                },
                "examples": {
                  "Default": {
                    "summary": "Default",
                    "value": {
                      "countOfRemainingRecords": 14,
                      "responseDateTime": "2018-05-08T07:17:23.1913715Z",
                      "endIndex": 2,
                      "offerId": 667925,
                      "offerUsers": [
                        {
                          "operationStatus": "Success",
                          "operationStatusMessage": "Validation Successful",
                          "operationDateTime": "2017-10-25T10:43:50.61",
                          "operationType": "ActivateOffer",
                          "operationProperty": [
                            {
                              "name": "ExternalId",
                              "value": "GRPNTIPSTERV7"
                            },
                            {
                              "name": "MerchantGroupName",
                              "value": "VMID01"
                            }
                          ],
                          "userId": "c3d6a28f-65f1-4766-bc33-bb3246614758",
                          "userKey": "newoffer8.9@restpais.com",
                          "activationId": "ea42e08b-c6d0-4108-98c3-1237006ccc16"
                        },
                        {
                          "operationStatus": "Success",
                          "operationStatusMessage": "Validation Successful",
                          "operationDateTime": "2017-10-25T10:43:31.403",
                          "operationType": "ActivateOffer",
                          "operationProperty": [
                            {
                              "name": "ExternalId",
                              "value": "GRPNTIPSTERV7"
                            },
                            {
                              "name": "MerchantGroupName",
                              "value": "VMID01"
                            }
                          ],
                          "userId": "c3d6a28f-65f1-4766-bc33-bb3246614758",
                          "userKey": "newoffer8.9@restpais.com",
                          "activationId": "b3684fdd-c9d9-41b2-b481-b0db62ec1bec"
                        }
                      ],
                      "correlationId": "8fd34bff-9877-4f67-a306-fd4995a3babc",
                      "responseStatus": {
                        "code": "SUCCESS",
                        "message": "Request proceed successfully without error."
                      },
                      "communityCode": "PB001CL"
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.OfferActivityByOfferIdResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.OfferActivityByOfferIdResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.OfferActivityByOfferIdResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "request",
        "x-operationVersions": [
          {
            "label": "v1 - Latest",
            "operationPointer": "#/paths/~1vop~1v1~1activations~1getbyoffer/post",
            "default": false
          }
        ],
        "x-hideTryIt": true
      }
    },
    "/vop/v1/activations/merchant": {
      "post": {
        "tags": ["Offers API"],
        "summary": "Activate User by Offer or Merchant",
        "description": " ",
        "operationId": "Activations_MerchantOfferActivate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.ActivationRequest"
              },
              "examples": {
                "Default": {
                  "summary": "Default",
                  "value": {
                    "endDate": "2017-03-25T22:27:46Z",
                    "activations": [
                      {
                        "name": "VisaMerchantId",
                        "value": "68893586"
                      },
                      {
                        "name": "VisaStoreId",
                        "value": "160416854"
                      },
                      {
                        "name": "MerchantGroupName",
                        "value": "Test1232017"
                      }
                    ],
                    "offerId": "5998197",
                    "recurrenceLimit": "4",
                    "startdate": "2017-03-25T22:27:46Z",
                    "userId": "355e7a0e-238a-4af4-8823-a72b06f29359",
                    "communityCode": "SANDBOX"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.ActivationRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.ActivationRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.ActivationRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.ActivationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.ActivationResponse"
                },
                "examples": {
                  "Default": {
                    "summary": "Default",
                    "value": {
                      "responseDateTime": "2017-01-24T01:57:55.2263048Z",
                      "correlationId": "37c57d20-f6a4-4ffe-9c56-d03b80c6e499",
                      "responseStatus": {
                        "code": "SUCCESS",
                        "message": "Request proceed successfully without error."
                      },
                      "activationId": "d7646b4d-1f2c-4a51-9512-0be87db2ba6c"
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.ActivationResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.ActivationResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.ActivationResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "request",
        "x-operationVersions": [
          {
            "label": "v1 - Latest",
            "operationPointer": "#/paths/~1vop~1v1~1activations~1merchant/post",
            "default": false
          }
        ],
        "x-hideTryIt": true
      }
    },
    "/vop/v1/offers/createwithevent": {
      "post": {
        "tags": ["Offers API"],
        "summary": "Create Offer",
        "description": "",
        "operationId": "Offers_CreateOffer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.CreateOfferRequest"
              },
              "examples": {
                "Default": {
                  "summary": "Default",
                  "value": {
                    "endDate": "2018-03-10T18:00:00.000Z",
                    "templateName": "QATest81",
                    "name": "OfferName123",
                    "description": "Offer Description",
                    "correlationId": "ce708e6a-fd5f-48cc-b9ff-ce518a6fda1a",
                    "externalOfferId": "1789910323",
                    "campaignName": "Rel8.1",
                    "events": [
                      {
                        "eventFields": [
                          {
                            "name": "TokenRequestorId",
                            "value": "40010030273"
                          },
                          {
                            "name": "MerchantGroupName",
                            "value": "MG1CAID404"
                          }
                        ]
                      },
                      {
                        "eventFields": [
                          {
                            "name": "MerchantGroupName",
                            "value": "MG1CAID404"
                          },
                          {
                            "name": "ClearedUSDAmount",
                            "value": "19.00"
                          }
                        ]
                      }
                    ],
                    "startDate": "2017-03-10T18:00:00.000Z",
                    "communityCode": "PB29CL"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.CreateOfferRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.CreateOfferRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.CreateOfferRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.CreateOfferRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.CreateOfferResponse"
                },
                "examples": {
                  "Default": {
                    "summary": "Default",
                    "value": {
                      "response": "TBD"
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.CreateOfferResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.CreateOfferResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.CreateOfferResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "request",
        "x-operationVersions": [
          {
            "label": "v1 - Latest",
            "operationPointer": "#/paths/~1vop~1v1~1offers~1createwithevent/post",
            "default": false
          }
        ],
        "x-hideTryIt": true
      }
    },
    "/vop/v1/activations/offer": {
      "post": {
        "tags": ["Offers API"],
        "summary": " Activate User by Offer - Asynchronous",
        "description": " ",
        "operationId": "Activations_OfferActivate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.ActivationRequest"
              },
              "examples": {
                "Default": {
                  "summary": "Default",
                  "value": {
                    "offerId": "4000054",
                    "clientCommunityCode": "PENCOMMUNITYQA2CL",
                    "userId": "5d03d958-e033-42fe-92a2-7bfd2073e9c0",
                    "communityCode": "SANDBOX"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.ActivationRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.ActivationRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.ActivationRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.ActivationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.ActivationResponse"
                },
                "examples": {
                  "Default": {
                    "summary": "Default",
                    "value": {
                      "responseDateTime": "2017-01-23T22:04:20.2945941Z",
                      "correlationId": "af8fc6bc-1794-4272-9faf-55683f0f6145",
                      "responseStatus": {
                        "code": "SUCCESS",
                        "message": "Request proceed successfully without error."
                      }
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.ActivationResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.ActivationResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.ActivationResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "request",
        "x-operationVersions": [
          {
            "label": "v1 - Latest",
            "operationPointer": "#/paths/~1vop~1v1~1activations~1offer/post",
            "default": false
          }
        ],
        "x-hideTryIt": true
      }
    },
    "/vop/v1/offers/update": {
      "post": {
        "tags": ["Offers API"],
        "summary": "Update Offer",
        "description": "",
        "operationId": "Offers_UpdateOffer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.UpdateOfferRequest"
              },
              "examples": {
                "Default": {
                  "summary": "Default",
                  "value": {
                    "action": "REJECT",
                    "offerId": "5998266",
                    "correlationId": "ce708e6a-fd5f-48cc-b9ff-ce518a6fda1a",
                    "communityCode": "PB29CL"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.UpdateOfferRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.UpdateOfferRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.UpdateOfferRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.UpdateOfferRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.UpdateOfferResponse"
                },
                "examples": {
                  "Default": {
                    "summary": "Default",
                    "value": {
                      "action": "REJECT",
                      "offerId": "6299",
                      "correlationId": "ce708e6a-fd5f-48cc-b9ff-ce518a6fda1a",
                      "communityCode": "SHENCHONCL"
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.UpdateOfferResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.UpdateOfferResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.UpdateOfferResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "request",
        "x-operationVersions": [
          {
            "label": "v1 - Latest",
            "operationPointer": "#/paths/~1vop~1v1~1offers~1update/post",
            "default": false
          }
        ],
        "x-hideTryIt": true
      }
    },
    "/vop/v1/deactivations/getbyuser": {
      "post": {
        "tags": ["Offers API"],
        "summary": "Retrieve Deactivation Data by User details",
        "description": " ",
        "operationId": "DeActivations_GetOfferDeactivationByUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.OfferActivityByUserRequest"
              },
              "examples": {
                "Default": {
                  "summary": "Default",
                  "value": {
                    "fromDate": "2016-01-30T01:20:03Z",
                    "startIndex": 0,
                    "operationStatus": "all",
                    "toDate": "2018-01-30T01:20:03Z",
                    "pageSize": 2,
                    "userId": "18470a1a-bdab-4f62-a408-afffb4a660dd",
                    "userkey": "",
                    "communityCode": "PB001"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.OfferActivityByUserRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.OfferActivityByUserRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.OfferActivityByUserRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.OfferActivityByUserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.OfferActivityByUserResponse"
                },
                "examples": {
                  "Default": {
                    "summary": "Default",
                    "value": {
                      "countOfRemainingRecords": 26,
                      "responseDateTime": "2018-05-08T07:15:13.3985395Z",
                      "endIndex": 2,
                      "offerOperationDetails": [
                        {
                          "operationStatus": "Success",
                          "operationDateTime": "2018-01-08T23:22:56.95",
                          "offerId": 667919,
                          "operationType": "DeActivateOffer",
                          "operationProperty": [],
                          "activationId": ""
                        },
                        {
                          "operationStatus": "Failed",
                          "operationDateTime": "2017-10-18T17:52:47.19",
                          "offerId": 667919,
                          "operationType": "DeActivateOffer",
                          "operationProperty": [],
                          "activationId": ""
                        }
                      ],
                      "correlationId": "a212e225-06a8-461e-a9ab-0b7e7ca76b40",
                      "responseStatus": {
                        "code": "SUCCESS",
                        "message": "Request proceed successfully without error."
                      },
                      "userId": "18470a1a-bdab-4f62-a408-afffb4a660dd",
                      "communityCode": "PB001"
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.OfferActivityByUserResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.OfferActivityByUserResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.OfferActivityByUserResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "request",
        "x-operationVersions": [
          {
            "label": "v1 - Latest",
            "operationPointer": "#/paths/~1vop~1v1~1deactivations~1getbyuser/post",
            "default": false
          }
        ],
        "x-hideTryIt": true
      }
    },
    "/vop/v1/deactivations/offer": {
      "post": {
        "tags": ["Offers API"],
        "summary": " Deactivate User by Offer - Asynchronous",
        "description": " ",
        "operationId": "DeActivations_OfferDeActivate",
        "requestBody": {
          "description": "DeActivationRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.DeActivateOfferRequest"
              },
              "examples": {
                "Default": {
                  "summary": "Default",
                  "value": {
                    "correlationId": "ce708e6a-fd5f-48cc-b9ff-ce518a6fda1a",
                    "offerProperties": [
                      {
                        "name": "offerId",
                        "value": "5998267"
                      },
                      {
                        "name": "ClientName",
                        "value": "PB29CL"
                      }
                    ],
                    "userId": "5d05d958-e033-42fe-92a2-7bfd2073e9c0",
                    "communityCode": "PB29"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.DeActivateOfferRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.DeActivateOfferRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.DeActivateOfferRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/RealTimeOffersApi.Models.DeActivateOfferRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.DeActivateOfferResponse"
                },
                "examples": {
                  "Default": {
                    "summary": "Default",
                    "value": {
                      "responseDateTime": "2017-03-23T22:19:40.6020941Z",
                      "correlationId": "ce708e6a-fd5f-48cc-b9ff-ce518a6fda1a",
                      "responseStatus": {
                        "code": "SUCCESS",
                        "message": "Request proceed successfully without error."
                      }
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.DeActivateOfferResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.DeActivateOfferResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeOffersApi.Models.DeActivateOfferResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "request",
        "x-operationVersions": [
          {
            "label": "v1 - Latest",
            "operationPointer": "#/paths/~1vop~1v1~1deactivations~1offer/post",
            "default": false
          }
        ],
        "x-hideTryIt": true
      }
    }
  },
  "components": {
    "schemas": {
      "RealTimeOffersApi.Models.GetUserEnrollmentRecordRequest": {
        "type": "object",
        "properties": {
          "userKey": {
            "type": "string",
            "description": "Unique identifier provided by VOP partner for the user – email, unique string, or mobile number."
          },
          "communityCode": {
            "type": "string",
            "description": "Client community code, must be exact match with the community code (Root community value) provided by Visa."
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          }
        }
      },
      "RealTimeOffersApi.Models.GetSCDetailsResponse": {
        "type": "object",
        "properties": {
          "messages": {
            "type": "array",
            "description": "response messages",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.Message"
            }
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "responseStatus": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.ResponseStatus"
          },
          "responseDateTime": {
            "type": "string",
            "description": "Response Date Time in GMT. Format 2022-01-18T22:29:12.8759678Z",
            "format": "date-time"
          },
          "TotalRecordsCount": {
            "type": "integer",
            "description": "Total Number of records found for given request",
            "format": "int32"
          },
          "RecordsinResponseCount": {
            "type": "integer",
            "description": "Number of records returned for given request (Max 100)",
            "format": "int32"
          },
          "StatementCreditDetails": {
            "type": "array",
            "description": "Statement Credit Details Response for REST API",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.SCDetails"
            }
          }
        }
      },
      "RealTimeOffersApi.Models.Event.GetEventMerchantRulesResponse": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "responseStatus": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.ResponseStatus"
          },
          "responseDateTime": {
            "type": "string",
            "description": "Response Date Time in GMT. Format 2022-01-18T22:29:12.8759678Z",
            "format": "date-time"
          },
          "eventMerchantRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.Event.EventMerchantRules"
            }
          }
        }
      },
      "RealTimeOffersApi.Models.MerchantSearchDetailsResponse": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "responseStatus": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.ResponseStatus"
          },
          "merchantDetails": {
            "type": "array",
            "description": "A list of Merchant objects",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.MerchantSearchInfo"
            }
          },
          "responseDateTime": {
            "type": "string",
            "description": "Response Date Time in GMT. Format 2022-01-18T22:29:12.8759678Z",
            "format": "date-time"
          },
          "numberOfMatchedRecords": {
            "type": "integer",
            "description": "Number of matched records",
            "format": "int32"
          }
        },
        "description": "Search Merchant response class"
      },
      "RealTimeOffersApi.Models.MerchantIdentificationByRefIdRequest": {
        "required": ["communityCode"],
        "type": "object",
        "properties": {
          "communityCode": {
            "type": "string",
            "description": "Community Code which is mandatory"
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "merchantIdentificationId": {
            "type": "array",
            "description": "List of Merchant Identification Id",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "RealTimeOffersApi.Models.ActivationRequest": {
        "required": ["communityCode", "offerId"],
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "Unique identifier for the user, generated by Visa and returned as part of enrollment response. Required if userKey is not part of the input request"
          },
          "endDate": {
            "type": "string",
            "description": "End date for the activation request (GMT). Format \"2023-01-20T00:00:00.000\"",
            "format": "date-time"
          },
          "offerId": {
            "type": "string",
            "description": "Offer id generated by VOP"
          },
          "userKey": {
            "type": "string",
            "description": "Unique identifier provided by VOP partner for the user – email, unique string, or mobile number. Required if userId is not part of the input request"
          },
          "startDate": {
            "type": "string",
            "description": "Start Date for the activation request (GMT). \"Format 2022-01-20T00:00:00.000\"",
            "format": "date-time"
          },
          "activations": {
            "type": "array",
            "description": "Use one or more 'activations' section for the request. Each section is treated as OR condition for qualification. The different properties  include MerchantGroupName, VisaStoreId, VisaMerchantId, ExternalId, AcquirerAffiliateID, and CardAcceptorIDCode. This section is optional and can be skipped if the user is being activated at offer and all merchants that are part of merchant group within the offer.",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.Property"
            }
          },
          "communityCode": {
            "type": "string",
            "description": "Client community code, must be exact match with the community code (CL level) provided by Visa."
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "recurrenceLimit": {
            "type": "integer",
            "description": "Repeat count for the activation. Accepted values are 1(1 transaction qualification for the activation), N(N transaction qualification for the activation) and -1(no limit for transaction qualification)",
            "format": "int32"
          }
        },
        "description": "Activation Request Class"
      },
      "RealTimeOffersApi.Models.TransactionResponse": {
        "type": "object",
        "properties": {
          "transactions": {
            "type": "array",
            "description": "List of Transaction Details",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.Transaction"
            }
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "responseStatus": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.ResponseStatus"
          },
          "responseDateTime": {
            "type": "string",
            "description": "Response Date Time in GMT. Format 2022-01-18T22:29:12.8759678Z",
            "format": "date-time"
          }
        },
        "description": "Transaction search response"
      },
      "RealTimeOffersApi.Models.Event.EventMessage": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "description": "Event action"
          },
          "messageName": {
            "type": "string",
            "description": "Message name"
          }
        }
      },
      "RealTimeOffersApi.Models.SaveMerchantInMerchantGroupResponse": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "responseStatus": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.ResponseStatus"
          },
          "responseDateTime": {
            "type": "string",
            "description": "Response Date Time in GMT. Format 2022-01-18T22:29:12.8759678Z",
            "format": "date-time"
          }
        }
      },
      "RealTimeOffersApi.Models.OfferEvent": {
        "type": "object",
        "properties": {
          "eventFields": {
            "type": "array",
            "description": "List of event conditions and values associated for offer creation",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.OfferEventField"
            }
          }
        }
      },
      "RealTimeOffersApi.Models.DeActivateOfferRequest": {
        "required": ["communityCode", "offerProperties"],
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "Unique identifier for the user, generated by Visa and returned as part of enrollment response. Required if userKey is not part of the input request"
          },
          "userKey": {
            "type": "string",
            "description": "Unique identifier provided by VOP partner for the user – email, unique string, or mobile number. Required if userId is not part of the input request"
          },
          "communityCode": {
            "type": "string",
            "description": "Client community code, must be exact match with the community code (Root level) provided by Visa."
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "offerProperties": {
            "type": "array",
            "description": "Use two pairs to specify values for \"offerId\" and \"ClientName\" and include the values for offer id and community CL value for client name",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.Property"
            }
          }
        }
      },
      "RealTimeOffersApi.Models.TemplateEvents": {
        "type": "object",
        "properties": {
          "eventId": {
            "type": "string",
            "description": "Event Display Id"
          },
          "eventType": {
            "type": "string",
            "description": "Event Type"
          },
          "eventRuleDetails": {
            "type": "array",
            "description": "Event Rule Details",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.EventRuleDetails"
            }
          }
        }
      },
      "RealTimeOffersApi.Models.Event.DisableEventRequest": {
        "type": "object",
        "properties": {
          "eventIds": {
            "type": "array",
            "description": "List of events id that to be disabled",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "communityCode": {
            "type": "string",
            "description": "Community Code"
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          }
        },
        "description": "Disable Event Request class"
      },
      "RealTimeOffersApi.Models.NotificationTemplates.PreviewSMSResponse": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "responseStatus": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.ResponseStatus"
          },
          "responseDateTime": {
            "type": "string",
            "description": "Response Date Time in GMT. Format 2022-01-18T22:29:12.8759678Z",
            "format": "date-time"
          }
        },
        "description": "Preview SMS Response"
      },
      "RealTimeOffersApi.Models.ClientCommunityGetResponse": {
        "type": "object",
        "properties": {
          "communities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.CommunityDetails"
            }
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "responseStatus": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.ResponseStatus"
          },
          "responseDateTime": {
            "type": "string",
            "description": "Response Date Time in GMT. Format 2022-01-18T22:29:12.8759678Z",
            "format": "date-time"
          }
        }
      },
      "RealTimeOffersApi.Models.UnEnrollRequest": {
        "required": ["communityCode"],
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "Unique identifier for the user, generated by Visa and returned as part of enrollment response. Required if userKey is not part of the input request",
            "format": "uuid"
          },
          "userKey": {
            "type": "string",
            "description": "Unique identifier provided by VOP partner for the user – email, unique string, or mobile number. Required if userId is not part of the input request"
          },
          "communityCode": {
            "type": "string",
            "description": "Client community code, must be exact match with the community code (Root community value) provided by Visa."
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          }
        },
        "description": "UnEnroll Request class"
      },
      "RealTimeOffersApi.Models.MerchantOnboardRequest": {
        "required": ["communityCode", "merchantDetails"],
        "type": "object",
        "properties": {
          "communityCode": {
            "type": "string",
            "description": "Client community code, must be exact match with the community code (CL level) provided by Visa."
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "merchantDetails": {
            "type": "array",
            "description": "List of merchant and stores to be onboarded. Provide the list of 'visaMerchantId' and/or 'visaStoreId'",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.Merchant"
            }
          }
        },
        "description": "Merchant Onboarding Request class"
      },
      "RealTimeOffersApi.Models.OfferOperationDetails": {
        "type": "object",
        "properties": {
          "offerId": {
            "type": "integer",
            "description": "Offer id generated by VOP",
            "format": "int32"
          },
          "activationId": {
            "type": "string",
            "description": "Each successful activation request returns a unique ActivationId GUID in the response."
          },
          "operationType": {
            "type": "string",
            "description": "Activation method used for the activation. Example, ActivateOffer"
          },
          "operationStatus": {
            "type": "string",
            "description": "Returns 'Success' for a successful activation record"
          },
          "operationDateTime": {
            "type": "string",
            "description": "Date and time of the activation request in GMT. Example, 2022-01-03T17:59:51.387",
            "format": "date-time"
          },
          "operationProperty": {
            "type": "array",
            "description": "List of property",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.Property"
            }
          },
          "operationStatusMessage": {
            "type": "string",
            "description": "Returns 'Validation Successful' for a successful activation message"
          }
        },
        "description": "List of Offer Details Fields"
      },
      "RealTimeOffersApi.Models.DeActivationRequest": {
        "required": ["clientCommunityCode", "communityCode", "offerId"],
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "Unique identifier for the user, generated by Visa and returned as part of enrollment response. Required if userKey is not part of the input request"
          },
          "offerId": {
            "type": "string",
            "description": "Offer id generated by VOP"
          },
          "userKey": {
            "type": "string",
            "description": "Unique identifier provided by VOP partner for the user – email, unique string, or mobile number. Required if userId is not part of the input request."
          },
          "activations": {
            "type": "array",
            "description": "Similar to activation request, use one or more 'activations' section for the request. The values passed must match the exact values sent with original activation request. System matches the values passed and disables all activations in the system.",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.Property"
            }
          },
          "activationId": {
            "type": "string",
            "description": "Successful activation request returns a unique ActivationId GUID in the response. This field can be used to deactivate a specific activation for the user"
          },
          "communityCode": {
            "type": "string",
            "description": "Client community code, must be exact match with the community code (CL level) provided by Visa."
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "clientCommunityCode": {
            "type": "string",
            "description": "Client community code, must be exact match with the community code provided by Visa"
          }
        },
        "description": "DeActivation Request Class"
      },
      "RealTimeOffersApi.Models.CreateOfferResponse": {
        "type": "object",
        "properties": {
          "offerId": {
            "type": "integer",
            "description": "Offer id generated by VOP",
            "format": "int32"
          },
          "communityCode": {
            "type": "string",
            "description": "Client community code sent in the request is sent back in the response."
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "responseStatus": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.ResponseStatus"
          },
          "externalOfferId": {
            "type": "string",
            "description": "Unique id defined for the offer by VOP partner"
          },
          "responseDateTime": {
            "type": "string",
            "description": "Response Date Time in GMT. Format 2022-01-18T22:29:12.8759678Z",
            "format": "date-time"
          }
        },
        "description": "Create Offer Response class"
      },
      "RealTimeOffersApi.Models.NotificationTemplates.SaveSMSTemplateResponse": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "responseStatus": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.ResponseStatus"
          },
          "responseDateTime": {
            "type": "string",
            "description": "Response Date Time in GMT. Format 2022-01-18T22:29:12.8759678Z",
            "format": "date-time"
          },
          "notificationTemplateId": {
            "type": "string",
            "description": "Notification Template Id"
          }
        }
      },
      "RealTimeOffersApi.Models.Money": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "description": "Statement credit amount",
            "format": "float"
          },
          "currency": {
            "type": "string",
            "description": "Currency code (numeric). Format 840"
          }
        },
        "description": "Money class"
      },
      "RealTimeOffersApi.Models.Reward": {
        "required": ["cardId", "communityCode", "rewardAmount", "userId"],
        "type": "object",
        "properties": {
          "cardId": {
            "type": "string",
            "description": "Unique ID for the Visa card returned by VOP after a successful enrollment"
          },
          "userId": {
            "type": "string",
            "description": "Unique identifier for the user, generated by Visa and returned as part of enrollment response"
          },
          "property": {
            "type": "array",
            "description": "A list of Property objects",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.Property"
            }
          },
          "description": {
            "type": "string",
            "description": "Description that gets posted to user statement. 25 characters alpha numeric field"
          },
          "merchantCity": {
            "type": "string",
            "description": "Description that gets appended to description value and posted to user statement. 10 characters alpha numeric field. Typically used to post VOP client phone number"
          },
          "rewardAmount": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.Money"
          },
          "communityCode": {
            "type": "string",
            "description": "Client community code, must be exact match with the community code (CL community value) provided by Visa."
          },
          "transactionId": {
            "type": "string",
            "description": "Visa-generated 15-digit identifier that is unique for each original transaction. The transaction identifier (TID) is a key element that links original authorization requests to subsequent messages, such as reversals."
          },
          "externalClientId": {
            "type": "string",
            "description": "Unique identifier for the statement credit assigned by VOP partner"
          },
          "transactionSettlementDate": {
            "type": "string",
            "description": "Transaction settlement date (GMT). Format 12/10/2022T00:00:00.000Z"
          }
        },
        "description": "Reward class"
      },
      "RealTimeOffersApi.Models.SegmentationDetail": {
        "type": "object",
        "properties": {
          "merchantId": {
            "type": "string",
            "description": "Unique merchant id for the card"
          },
          "segmentationId": {
            "type": "string",
            "description": "Unique segment id for the card"
          }
        }
      },
      "RealTimeOffersApi.Models.OfferDetails": {
        "required": ["communityCode"],
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "Offer URL"
          },
          "name": {
            "type": "string",
            "description": "Offer Name"
          },
          "title": {
            "type": "string",
            "description": "Offer Title"
          },
          "events": {
            "type": "array",
            "description": "Event Fields",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.Events"
            }
          },
          "offerId": {
            "type": "integer",
            "description": "Offer ID",
            "format": "int32"
          },
          "isEnabled": {
            "type": "boolean",
            "description": "Is Enabled"
          },
          "externalId": {
            "type": "string",
            "description": "Offer ExternalId"
          },
          "largeImage": {
            "type": "string",
            "description": "Offer image URL (large).  Visa hosts.  JPEG or GIF."
          },
          "smallImage": {
            "type": "string",
            "description": "Offer image URL (small).  Visa hosts.  JPEG or GIF."
          },
          "OfferSource": {
            "type": "string",
            "description": "Offer Source"
          },
          "createdDate": {
            "type": "string",
            "description": "Offer Created Date",
            "format": "date-time"
          },
          "description": {
            "type": "string"
          },
          "endDateTime": {
            "type": "string",
            "description": "Offer End Date Time",
            "format": "date-time"
          },
          "mediumImage": {
            "type": "string",
            "description": "Offer image URL (medium).  Visa hosts.  JPEG or GIF."
          },
          "IsCardLinked": {
            "type": "boolean",
            "description": "Is Card Linked"
          },
          "communityCode": {
            "type": "string",
            "description": "Community Code"
          },
          "startDateTime": {
            "type": "string",
            "description": "Offer Start Date Time",
            "format": "date-time"
          },
          "SupportedRegion": {
            "type": "array",
            "description": "Supported Regions",
            "items": {
              "type": "string"
            }
          },
          "SupportedLanguage": {
            "type": "array",
            "description": "Supported Languages",
            "items": {
              "type": "string"
            }
          },
          "termsAndConditions": {
            "type": "string"
          }
        },
        "description": "List of Offer Details Fields"
      },
      "RealTimeOffersApi.Models.RewardRequest": {
        "required": ["reward"],
        "type": "object",
        "properties": {
          "reward": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.Reward"
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          }
        },
        "description": "Reward Request"
      },
      "RealTimeOffersApi.Models.NotificationTemplates.SaveEmailTemplateResponse": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "responseStatus": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.ResponseStatus"
          },
          "responseDateTime": {
            "type": "string",
            "description": "Response Date Time in GMT. Format 2022-01-18T22:29:12.8759678Z",
            "format": "date-time"
          },
          "notificationTemplateId": {
            "type": "string",
            "description": "Notification Template Id"
          }
        },
        "description": "Save Email Response Class"
      },
      "RealTimeOffersApi.Models.MerchantSearchInfo": {
        "type": "object",
        "properties": {
          "DBAName": {
            "type": "array",
            "description": "Merchant Doing Business As name",
            "items": {
              "type": "string"
            }
          },
          "merchantUrl": {
            "type": "array",
            "description": "URL of the merchant.",
            "items": {
              "type": "string"
            }
          },
          "visaStoreId": {
            "type": "string",
            "description": "Visa defined unique store id"
          },
          "merchantCity": {
            "type": "string",
            "description": "City of the merchant"
          },
          "qualityIndex": {
            "type": "string",
            "description": "Quality Index"
          },
          "terminalType": {
            "type": "array",
            "description": "Terminal Type",
            "items": {
              "type": "string"
            }
          },
          "IsPSPMerchant": {
            "type": "boolean",
            "description": "'true' if the merchant/store is Payment service provider"
          },
          "merchantState": {
            "type": "string",
            "description": "State of the merchant"
          },
          "visaStoreName": {
            "type": "string",
            "description": "Normalized name for the store location"
          },
          "visaMerchantId": {
            "type": "string",
            "description": "Visa defined unique merchant id"
          },
          "matchIndicators": {
            "type": "array",
            "description": "If set to \"true\" in the request, response will include the input attributes that are exact with the merchant entries in the response",
            "items": {
              "type": "string"
            }
          },
          "visaMerchantName": {
            "type": "string",
            "description": "Normalized name for the merchant"
          },
          "businessLegalName": {
            "type": "array",
            "description": "Business Legal Name",
            "items": {
              "type": "string"
            }
          },
          "lastTranDateRange": {
            "type": "string",
            "description": "Most recent transaction for the underlying merchant parameters. '30' means the merchant has been active in last 30 days"
          },
          "firstTranDateRange": {
            "type": "string",
            "description": "First time the Visa systems noticed a transaction with underlying merchant parameters"
          },
          "merchantPostalCode": {
            "type": "string",
            "description": "Postal code of the merchant"
          },
          "merchantCountryCode": {
            "type": "string",
            "description": "Merchant Country Code in 3 digit numeric code, for example 840 for US."
          },
          "merchantPhoneNumber": {
            "type": "array",
            "description": "Phone number for the merchant",
            "items": {
              "type": "string"
            }
          },
          "merchantCategoryCode": {
            "type": "array",
            "description": "Merchant category codes (MCCs) are four-digit numbers that describe a merchant's primary business activities.",
            "items": {
              "type": "string"
            }
          },
          "merchantStreetAddress": {
            "type": "string",
            "description": "Address of the merchant"
          },
          "paymentFacilitatorName": {
            "type": "array",
            "description": "Merchant Payment Facilitator Name",
            "items": {
              "type": "string"
            }
          },
          "paymentAcceptanceMethod": {
            "type": "array",
            "description": "Payment Acceptance Method",
            "items": {
              "type": "string"
            }
          },
          "merchantCategoryCodeDesc": {
            "type": "array",
            "description": "Description of merchant category code",
            "items": {
              "type": "string"
            }
          },
          "visaMerchantEnterpriseName": {
            "type": "string",
            "description": "Visa defined unique merchant id"
          }
        },
        "description": "A list of Merchant objects"
      },
      "Visa.Ice.RealTime.Enrollment.Contracts.Enrollment.CategoryInfo": {
        "type": "object",
        "properties": {
          "GroupCode": {
            "type": "string"
          },
          "GroupName": {
            "type": "string"
          },
          "Categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Visa.Ice.RealTime.Enrollment.Contracts.Enrollment.CategoryItem"
            }
          },
          "CategoryCode": {
            "type": "string"
          }
        },
        "description": "Data Transfer Object for Category information"
      },
      "RealTimeOffersApi.Models.AddCardResponse": {
        "type": "object",
        "properties": {
          "cardDetails": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.CardDetails"
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "responseStatus": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.ResponseStatus"
          },
          "responseDateTime": {
            "type": "string",
            "description": "Response Date Time in GMT. Format 2022-01-18T22:29:12.8759678Z",
            "format": "date-time"
          }
        }
      },
      "RealTimeOffersApi.Models.MerchantSearchRequest": {
        "required": ["communityCode", "transactionDate", "userCommunityCode"],
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "Merchant values to be searched for the merchant search type in the request"
          },
          "userAlias": {
            "type": "string",
            "description": "User email address that they registered the test card account with"
          },
          "acquirerBin": {
            "type": "string",
            "description": "Acquiring Identifier, formerly known as Acquiring BIN. Can be used in combination with Card Acceptor ID to search for specific store location"
          },
          "merchantCity": {
            "type": "string",
            "description": "City of the merchant"
          },
          "merchantName": {
            "type": "string",
            "description": "Merchant Name. If used, must include transactionDate, transactionAmount and userAlias fields in the input request"
          },
          "communityCode": {
            "type": "string",
            "description": "Client community code, must be exact match with the community code (CG level) provided by Visa."
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "merchantState": {
            "type": "string",
            "description": "State of the merchant"
          },
          "transactionId": {
            "type": "string",
            "description": "Visa-generated 15-digit identifier that is unique for each original transaction. The transaction identifier (TID) is a key element that links original authorization requests to subsequent messages, such as reversals. Can be used as a search criteria with transactionDate"
          },
          "cardAcceptorId": {
            "type": "string",
            "description": "The Card Acceptor ID (CAID) is a unique identifier number for the originator of transfers. Typically, an ID is between 1 and 15 characters and is assigned for each store location"
          },
          "merchantAddress": {
            "type": "string",
            "description": "Address of the merchant"
          },
          "transactionDate": {
            "type": "string",
            "description": "Date of test transaction (GMT). Format 2022-01-07T00:00:00",
            "format": "date-time"
          },
          "transactionAmount": {
            "type": "number",
            "description": "Exact amount of the test transaction. If used, must include transactionDate, merchantName and userAlias fields in the input request",
            "format": "double"
          },
          "userCommunityCode": {
            "type": "string",
            "description": "Use “PARTNERONBOARDING” if using a test card enrolled via the Merchant Onboarding Tool . For any other card, use the community in which the card was enrolled"
          },
          "acquirerMerchantId": {
            "type": "string",
            "description": "Acquirer Merchant Identification Number (MID)"
          },
          "isStoreListRequest": {
            "type": "boolean",
            "description": "Should response include store values? Possible values - true/false"
          },
          "merchantPostalCode": {
            "type": "string",
            "description": "Postal code of the merchant"
          },
          "merchantSearchType": {
            "type": "integer",
            "description": "Merchant search type being used for the request. Sample values - VisaFranchiseId, VisaFranchiseName, VisaEnterpriseId, VisaEnterpriseName, VisaMerchantId, VisaMerchantName, VisaStoreId, VisaStoreName",
            "format": "int32",
            "enum": [0, 1, 2, 3, 4, 5, 6, 7, 8]
          },
          "merchantCountryCode": {
            "type": "string",
            "description": "Merchant Country Code in 3 digit numeric code, for example 840 for US."
          },
          "merchantSearchOptionType": {
            "type": "integer",
            "description": "Merchant Search Option Type",
            "format": "int32",
            "enum": [0, 1, 2, 3, 4]
          }
        }
      },
      "RealTimeOffersApi.Models.NotificationTemplates.SaveSMSTemplateRequest": {
        "required": ["body", "communityCode", "defaultLanguage", "name"],
        "type": "object",
        "properties": {
          "body": {
            "type": "string",
            "description": "Message details"
          },
          "name": {
            "type": "string",
            "description": "The message name for this message.\r\nMessage name + community code forms the buisness PK.\r\nRequired."
          },
          "communityCode": {
            "type": "string",
            "description": "The code of the Community"
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "defaultLanguage": {
            "type": "string",
            "description": "If the customers prefered language is not specified in the list of available messages\r\nfor the given channel then use this language.\r\nThis value must be present for one SMS for this community and this message name."
          }
        }
      },
      "RealTimeOffersApi.Models.OfferActivityByOfferIdRequest": {
        "required": ["communityCode", "offerId", "operationStatus"],
        "type": "object",
        "properties": {
          "toDate": {
            "type": "string",
            "description": "End date for the values requested in GMT",
            "format": "date-time"
          },
          "offerId": {
            "type": "integer",
            "description": "Offer id generated by VOP",
            "format": "int32"
          },
          "fromDate": {
            "type": "string",
            "description": "Start date for the values requested in GMT",
            "format": "date-time"
          },
          "pageSize": {
            "type": "integer",
            "description": "Number of records to be returned back in the response. Maximum PageSize is 5000. If left blank, the response defaults to 5000 as well",
            "format": "int32"
          },
          "startIndex": {
            "type": "integer",
            "description": "Start index for the values requested. Default value is 0. For more than 5000 records, use this field to iterate through entire list",
            "format": "int32"
          },
          "communityCode": {
            "type": "string",
            "description": "Client community code, must be exact match with the community code (CL community value) provided by Visa."
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "operationStatus": {
            "type": "string",
            "description": "Operation Status"
          }
        }
      },
      "RealTimeOffersApi.Models.SaveMerchantInMerchantGroupRequest": {
        "required": ["communityCode", "merchantDetails", "merchantGroupName"],
        "type": "object",
        "properties": {
          "communityCode": {
            "type": "string",
            "description": "Client community code, must be exact match with the community code (CL level) provided by Visa."
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "merchantDetails": {
            "type": "array",
            "description": "List of merchants to add to the merchant group or delete from the merchant group",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.VisaMerchantDetails"
            }
          },
          "merchantGroupName": {
            "type": "string",
            "description": "Merchant Group name, must be an exact match to existing merchant group name of type MerchantInfo"
          }
        },
        "description": "Add Merchant to Merchant Group Request"
      },
      "RealTimeOffersApi.Models.OfferActivityByOfferIdResponse": {
        "type": "object",
        "properties": {
          "offerId": {
            "type": "integer",
            "description": "Offer id generated by VOP",
            "format": "int32"
          },
          "endIndex": {
            "type": "integer",
            "description": "Last record number included in the response",
            "format": "int32"
          },
          "offerUsers": {
            "type": "array",
            "description": "Offer Operation Details",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.OfferUsers"
            }
          },
          "communityCode": {
            "type": "string",
            "description": "Client community code sent in the request is sent back in the response."
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "responseStatus": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.ResponseStatus"
          },
          "responseDateTime": {
            "type": "string",
            "description": "Response Date Time in GMT. Format 2022-01-18T22:29:12.8759678Z",
            "format": "date-time"
          },
          "countOfRemainingRecords": {
            "type": "integer",
            "description": "Count on remaining records based on the search criteria",
            "format": "int32"
          }
        }
      },
      "RealTimeOffersApi.Models.OfferActivityByUserRequest": {
        "required": ["communityCode", "operationStatus"],
        "type": "object",
        "properties": {
          "toDate": {
            "type": "string",
            "description": "End date for the values requested in GMT",
            "format": "date-time"
          },
          "userId": {
            "type": "string",
            "description": "Unique identifier for the user, generated by Visa and returned as part of enrollment response. Required if userKey is not part of the input request",
            "format": "uuid"
          },
          "userKey": {
            "type": "string",
            "description": "Unique identifier provided by VOP partner for the user – email, unique string, or mobile number. Required if userId is not part of the input request"
          },
          "fromDate": {
            "type": "string",
            "description": "Start date for the values requested in GMT",
            "format": "date-time"
          },
          "pageSize": {
            "type": "integer",
            "description": "Number of records to be returned back in the response. Maximum PageSize is 5000. If left blank, the response defaults to 5000 as well",
            "format": "int32"
          },
          "startIndex": {
            "type": "integer",
            "description": "\"Start index for the values requested. Default value is 0. For more than 5000 records, use this field to iterate through entire list\"",
            "format": "int32"
          },
          "communityCode": {
            "type": "string",
            "description": "Client community code, must be exact match with the community code (CL community value) provided by Visa."
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "operationStatus": {
            "type": "string",
            "description": "Operation Status"
          }
        }
      },
      "RealTimeOffersApi.Models.ActivationResponse": {
        "type": "object",
        "properties": {
          "activationId": {
            "type": "string",
            "description": "Each successful activation request returns a unique ActivationId GUID in the response."
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "responseStatus": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.ResponseStatus"
          },
          "responseDateTime": {
            "type": "string",
            "description": "Response Date Time in GMT. Format 2022-01-18T22:29:12.8759678Z",
            "format": "date-time"
          }
        },
        "description": "Activation Response Class"
      },
      "RealTimeOffersApi.Models.CommunityCategory": {
        "type": "object",
        "properties": {
          "isAlive": {
            "type": "boolean",
            "description": "Indicates if this category is deleted."
          },
          "categoryCode": {
            "type": "string"
          },
          "categoryDescription": {
            "type": "string",
            "description": "Description of Category"
          },
          "isPreferredCategory": {
            "type": "boolean",
            "description": "Indicates if Category is default"
          }
        }
      },
      "RealTimeOffersApi.Models.SearchMerchantResponse": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "responseStatus": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.ResponseStatus"
          },
          "merchantDetails": {
            "type": "array",
            "description": "A list of Merchant objects",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.Merchant"
            }
          },
          "responseDateTime": {
            "type": "string",
            "description": "Response Date Time in GMT. Format 2022-01-18T22:29:12.8759678Z",
            "format": "date-time"
          },
          "requestProperties": {
            "type": "object",
            "properties": {},
            "description": "Request properties"
          }
        },
        "description": "Search Merchant response class"
      },
      "RealTimeOffersApi.Models.DeActivateOfferResponse": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "responseStatus": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.ResponseStatus"
          },
          "responseDateTime": {
            "type": "string",
            "description": "Response Date Time in GMT. Format 2022-01-18T22:29:12.8759678Z",
            "format": "date-time"
          }
        }
      },
      "RealTimeOffersApi.Models.NotificationTemplates.PreviewSMSRequest": {
        "required": ["communityCode", "phoneNumbers"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The message name for this message.\r\nMessage name + community code forms the buisness PK.\r\nRequired."
          },
          "phoneNumbers": {
            "type": "array",
            "description": "Phone # for SMS",
            "items": {
              "type": "string"
            }
          },
          "communityCode": {
            "type": "string",
            "description": "The code of the Community"
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "notificationTemplateId": {
            "type": "string",
            "description": "notificationTemplateId"
          }
        },
        "description": "Preview SMS Request"
      },
      "RealTimeOffersApi.Models.OfferActivation.OfferActivationResponse": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "communityCode": {
            "type": "string"
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "responseStatus": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.ResponseStatus"
          },
          "offerActivations": {
            "type": "array",
            "description": "List of Offer Activations",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.OfferActivation.OfferActivationDetails"
            }
          },
          "responseDateTime": {
            "type": "string",
            "description": "Response Date Time in GMT. Format 2022-01-18T22:29:12.8759678Z",
            "format": "date-time"
          }
        }
      },
      "RealTimeOffersApi.Models.AddMerchantGroupResponse": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "responseStatus": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.ResponseStatus"
          },
          "responseDateTime": {
            "type": "string",
            "description": "Response Date Time in GMT. Format 2022-01-18T22:29:12.8759678Z",
            "format": "date-time"
          }
        }
      },
      "RealTimeOffersApi.Models.Event.RuleProperty": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "name"
          },
          "type": {
            "type": "string",
            "description": "type"
          },
          "value": {
            "type": "string",
            "description": "value"
          },
          "coordinates": {
            "type": "string",
            "description": "Coordinates"
          },
          "subProperties": {
            "type": "array",
            "description": "Event Rule Property",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.Property"
            }
          },
          "locationProperties": {
            "type": "array",
            "description": "Location properties",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.Property"
            }
          }
        }
      },
      "RealTimeOffersApi.Models.ResponseStatusDetail": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "A unique code to describe the type of validation error occurred"
          },
          "message": {
            "type": "string",
            "description": "A description of an error that occurred during the request"
          }
        },
        "description": "Response status detail class"
      },
      "Visa.Ice.RealTime.Enrollment.Contracts.Enrollment.CategoryItem": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "SubGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Visa.Ice.RealTime.Enrollment.Contracts.Enrollment.SubGroup"
            }
          }
        }
      },
      "RealTimeOffersApi.Models.POSRedemptionFeatures": {
        "type": "object",
        "properties": {
          "isPretaxCapable": {
            "type": "boolean",
            "description": "IsPretaxCapable"
          },
          "isPerUnitDiscountCapable": {
            "type": "boolean",
            "description": "IsPerUnitDiscountCapable"
          }
        },
        "description": "An instance of the POSRedemptionFeatures class."
      },
      "RealTimeOffersApi.Models.AddMerchantGroupRequest": {
        "required": ["communityCode", "merchantGroups", "type"],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Merchant Group Type, Allowed Types - 'MerchantInfo'  for Visa defined merchant ids and 'AcquirerInfo' for acquirer assigned merchant values"
          },
          "communityCode": {
            "type": "string",
            "description": "Client community code, must be exact match with the community code (CL level) provided by Visa."
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "merchantGroups": {
            "type": "array",
            "description": "Merchant group name to be created.",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.MerchantGroup"
            }
          }
        },
        "description": "Add Merchant Group request"
      },
      "RealTimeOffersApi.Models.UpdatedCommunitiesGetResponse": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "responseStatus": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.ResponseStatus"
          },
          "refreshTimeStamp": {
            "type": "integer",
            "description": "Will indicate the value when the next refresh is suppose to happen",
            "format": "int64"
          },
          "responseDateTime": {
            "type": "string",
            "description": "Response Date Time in GMT. Format 2022-01-18T22:29:12.8759678Z",
            "format": "date-time"
          },
          "updatedCommunities": {
            "type": "array",
            "description": "Provides the details of community code and level type.",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.UpdatedCommunityInfo"
            }
          }
        }
      },
      "RealTimeOffersApi.Models.TransactionReplayResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "responseStatus": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.ResponseStatus"
          },
          "responseDateTime": {
            "type": "string",
            "description": "Response Date Time in GMT. Format 2022-01-18T22:29:12.8759678Z",
            "format": "date-time"
          },
          "rtmTransactionId": {
            "type": "string"
          }
        }
      },
      "RealTimeOffersApi.Models.AcquirerType": {
        "type": "object",
        "properties": {
          "acquirerBin": {
            "type": "string",
            "description": "Acquiring Identifier, formerly known as Acquiring BIN"
          },
          "cardAcceptorId": {
            "type": "string",
            "description": "The Card Acceptor ID (CAID) is a unique identifier number for the originator of transfers. Typically, an ID is between 1 and 15 characters and is assigned for each store location"
          }
        }
      },
      "RealTimeOffersApi.Models.UnEnrollResponse": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "responseStatus": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.ResponseStatus"
          },
          "responseDateTime": {
            "type": "string",
            "description": "Response Date Time in GMT. Format 2022-01-18T22:29:12.8759678Z",
            "format": "date-time"
          }
        },
        "description": "Un-Enroll Response class"
      },
      "RealTimeOffersApi.Models.NotificationTemplates.PreviewEmailRequest": {
        "required": ["communityCode", "emailAddress", "fromAddress"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The message name for this message.\r\nMessage name + community code forms the buisness PK.\r\nRequired."
          },
          "fromAddress": {
            "type": "string"
          },
          "emailAddress": {
            "type": "array",
            "description": "The email address to send to",
            "items": {
              "type": "string"
            }
          },
          "communityCode": {
            "type": "string",
            "description": "The code of the Community"
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "notificationTemplateId": {
            "type": "string",
            "description": "notificationTemplateId"
          }
        },
        "description": "PreviewEmailRequest class"
      },
      "RealTimeOffersApi.Models.MerchantIdentificationRequest": {
        "required": ["communityCode"],
        "type": "object",
        "properties": {
          "recordType": {
            "type": "string",
            "description": "Record type : Only vmidvsid / caidabin"
          },
          "communityCode": {
            "type": "string",
            "description": "Community Code which is mandatory"
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "merchantDetailsRequest": {
            "type": "array",
            "description": "List of Merchant Details",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.MerchantIdentification"
            }
          }
        }
      },
      "RealTimeOffersApi.Models.Event.EndPointMessage": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "description": "Event action"
          },
          "endPoint": {
            "type": "string",
            "description": "End point"
          },
          "messageName": {
            "type": "string",
            "description": "Message name"
          },
          "endPointMessageUserDefinedFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.Property"
            }
          }
        }
      },
      "RealTimeOffersApi.Models.SCDetails": {
        "type": "object",
        "properties": {
          "CardID": {
            "type": "string",
            "description": "Card ID"
          },
          "UserID": {
            "type": "string",
            "description": "User ID"
          },
          "EventId": {
            "type": "integer",
            "format": "int32"
          },
          "OfferId": {
            "type": "integer",
            "format": "int32"
          },
          "CardLast4": {
            "type": "string",
            "description": "Card last 4"
          },
          "RejectCode": {
            "type": "string",
            "description": "Reject Code"
          },
          "CreatedDate": {
            "type": "string",
            "description": "Created Date",
            "format": "date-time"
          },
          "RewardAmount": {
            "type": "string",
            "description": "Reward Amount"
          },
          "SettlementID": {
            "type": "string",
            "description": "Settlement ID"
          },
          "CommunityCode": {
            "type": "string",
            "description": "Community Code"
          },
          "TransactionID": {
            "type": "string",
            "description": "Transaction ID"
          },
          "RejectDescription": {
            "type": "string",
            "description": "Reject Description"
          },
          "RewardCurrencyCode": {
            "type": "string",
            "description": "Reward Currency Code"
          },
          "StatementCreditStatus": {
            "type": "string",
            "description": "Statement Credit Status"
          },
          "FulfillmentDescription": {
            "type": "string",
            "description": "Fulfillment Description"
          },
          "SCAdditionalDetailsList": {
            "type": "array",
            "description": "More Statement Credit Details for the Given request",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.AdditionalDetail"
            }
          }
        }
      },
      "RealTimeOffersApi.Models.Token": {
        "type": "object",
        "properties": {
          "tokenReferenceID": {
            "type": "string",
            "description": "Non-financial ID used to represent a Token in interactions between VTS, and issuers. Unique to a single token. Known by issuers, VIP and also shared with (but not used) by Token requesters."
          },
          "tokenRequestorID": {
            "type": "string",
            "description": "Unique ID that identifies the entity for which the token request is being conducted on behalf of."
          },
          "tokenAccountNumber": {
            "type": "string",
            "description": "16-digit token for the PAN"
          }
        },
        "description": "Token class"
      },
      "RealTimeOffersApi.Models.CreateOfferRequest": {
        "required": [
          "campaignName",
          "communityCode",
          "description",
          "endDate",
          "name",
          "startDate",
          "templateName"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Unique offer name"
          },
          "events": {
            "type": "array",
            "description": "Use one or more 'events' section for the request. Each section defines a unique set  of rules for qualifications and an action to be taken when the qualification criteria is met",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.OfferEvent"
            }
          },
          "endDate": {
            "type": "string",
            "description": "Date when the offer should stop qualifications in GMT, sample value: 2022-01-17T09:20:03",
            "format": "date-time"
          },
          "startDate": {
            "type": "string",
            "description": "Date when the offer should start qualifications in GMT, sample value: 2022-01-17T09:20:03",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "description": "Describe the offer details"
          },
          "campaignName": {
            "type": "string",
            "description": "Campaign name provided by Visa Technical Account Manager"
          },
          "templateName": {
            "type": "string",
            "description": "Offer template name provided by Visa Technical Account Manager"
          },
          "communityCode": {
            "type": "string",
            "description": "Client community code, must be exact match with the community code (CL level) provided by Visa."
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "externalOfferId": {
            "type": "string",
            "description": "Unique id defined for the offer by VOP partner"
          }
        },
        "description": "Create Offer Request class"
      },
      "RealTimeOffersApi.Models.Merchant": {
        "required": ["visaMerchantId"],
        "type": "object",
        "properties": {
          "isActive": {
            "type": "boolean",
            "description": "True if merchant is active in the merchant group"
          },
          "createdBy": {
            "type": "string",
            "description": "API username for the user who added the merchant to the merchant group. CYBS if added through CSC"
          },
          "isDeleted": {
            "type": "boolean",
            "description": "True if merchant is active in GMR DB"
          },
          "externalId": {
            "type": "string",
            "description": "Merchants within a merchant group can be grouped together with External ID field, defined when merchant is being added to the merchant group. ExternalId is 25-character alphanumeric (all CAPS) field which does not allow any spaces or special characters."
          },
          "modifiedBy": {
            "type": "string",
            "description": "API username for the user who last updated the merchant group. CYBS if edited through CSC"
          },
          "createdDate": {
            "type": "string",
            "description": "Date merchant was added to the merchant group",
            "format": "date-time"
          },
          "visaStoreId": {
            "type": "string",
            "description": "Visa defined unique store id"
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date merchant group was last modified",
            "format": "date-time"
          },
          "acquirerTypes": {
            "type": "array",
            "description": "An instance of the acquirerTypes class.",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.AcquirerType"
            }
          },
          "visaStoreName": {
            "type": "string",
            "description": "Normalized name for the store location"
          },
          "visaMerchantId": {
            "type": "string",
            "description": "Visa defined unique merchant id"
          },
          "visaFranchiseId": {
            "type": "string",
            "description": "Visa defined franchise id"
          },
          "visaMerchantName": {
            "type": "string",
            "description": "Normalized name for the merchant"
          },
          "visaFranchiseName": {
            "type": "string",
            "description": "Visa defined franchise name"
          },
          "merchantRawAddress": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.MerchantRawAddress"
          },
          "merchantCategoryCode": {
            "type": "string",
            "description": "Merchant category codes (MCCs) are four-digit numbers that describe a merchant's primary business activities."
          },
          "visaStoreGeoLocation": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.GeoLocation"
          },
          "posRedemptionFeatures": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.POSRedemptionFeatures"
          },
          "isPOSRedemptionCapable": {
            "type": "boolean",
            "description": "IsPOSRedemptionCapable"
          },
          "visaMerchantEnterpriseId": {
            "type": "string",
            "description": "Visa defined merchant enterprise id"
          },
          "visaStoreEnrichedAddress": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.MerchantRawAddress"
          },
          "merchantVerificationValue": {
            "type": "string",
            "description": "Merchant Verification Value or MVV refers to a value assigned by Visa used to identify participation in select merchant programs"
          },
          "visaMerchantEnterpriseName": {
            "type": "string",
            "description": "Visa defined merchant enterprise name"
          }
        },
        "description": "Merchant Class"
      },
      "RealTimeOffersApi.Models.Event.EventDetails": {
        "required": [
          "actions",
          "communityCode",
          "eventDescription",
          "eventStartTimestamp",
          "eventStopTimestamp",
          "eventType",
          "notificationMessage",
          "offerId",
          "rules"
        ],
        "type": "object",
        "properties": {
          "rules": {
            "type": "array",
            "description": "Event Rules",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.Event.EventRule"
            }
          },
          "actions": {
            "type": "array",
            "description": "Event Actions",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.Event.EventAction"
            }
          },
          "eventId": {
            "type": "integer",
            "description": "Event Id. If not supplied system returns an auto-generated id.",
            "format": "int32"
          },
          "offerId": {
            "type": "integer",
            "description": "Event offer id",
            "format": "int32"
          },
          "eventType": {
            "type": "string",
            "description": "Event Type - various types allowed - TODO"
          },
          "repeatCount": {
            "type": "integer",
            "description": "Event repeat count for qualification",
            "format": "int32"
          },
          "communityCode": {
            "type": "string",
            "description": "Client community code"
          },
          "eventInterval": {
            "type": "string",
            "description": "Event interval"
          },
          "userGroupName": {
            "type": "string",
            "description": "What?"
          },
          "eventDescription": {
            "type": "string",
            "description": "Description of the Event"
          },
          "eventStopTimestamp": {
            "type": "string",
            "format": "date-time"
          },
          "eventStartTimestamp": {
            "type": "string",
            "format": "date-time"
          },
          "notificationMessage": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.Event.NotificationMessage"
          }
        },
        "description": "Event Details Class"
      },
      "RealTimeOffersApi.Models.Offer": {
        "required": ["communityCode", "endDateTime", "name", "startDateTime"],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Offer id for the newly created offer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Offer Name"
          },
          "type": {
            "type": "string",
            "description": "Offer Type"
          },
          "title": {
            "type": "string",
            "description": "Offer Title"
          },
          "awardMax": {
            "type": "number",
            "description": "Maximum $ value the award can be.   Relevant for % back offers.",
            "format": "double"
          },
          "awardMin": {
            "type": "number",
            "description": "Minimum amount of spend to qualify for an offer.",
            "format": "double"
          },
          "metaData": {
            "type": "array",
            "description": "Offer Meta Data",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.Property"
            }
          },
          "isEnabled": {
            "type": "boolean",
            "description": "Offer enabled status"
          },
          "externalId": {
            "type": "string",
            "description": "Offer external Id"
          },
          "awardAmount": {
            "type": "number",
            "description": "Offer Award amount for \"fixed\" award offers",
            "format": "double"
          },
          "description": {
            "type": "string",
            "description": "Offer Description"
          },
          "endDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "offerSource": {
            "type": "string",
            "description": "Offer Source.  String"
          },
          "awardPercent": {
            "type": "number",
            "description": "Offer Award amount for \"percent back\" offers",
            "format": "double"
          },
          "isCardLinked": {
            "type": "boolean",
            "description": "Is card Linked. bool"
          },
          "merchantName": {
            "type": "string",
            "description": "Merchant Name."
          },
          "templateName": {
            "type": "string",
            "description": "Offer Template Name"
          },
          "communityCode": {
            "type": "string",
            "description": "Partner community code, must be exact match with the community code provided by Visa"
          },
          "startDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "supportedRegion": {
            "type": "array",
            "description": "Supported Regions. List of String",
            "items": {
              "type": "string"
            }
          },
          "fixedDescription": {
            "type": "string",
            "description": "Offer fixed description"
          },
          "supportedLanguage": {
            "type": "array",
            "description": "Supported Languages. List of String",
            "items": {
              "type": "string"
            }
          },
          "merchantLargeImage": {
            "type": "string",
            "description": "Merchant image URL (large).  Visa hosts.  JPEG or GIF."
          },
          "merchantSmallImage": {
            "type": "string",
            "description": "Merchant image URL (small).  Visa hosts.  JPEG or GIF."
          },
          "termsAndConditions": {
            "type": "string"
          },
          "merchantMediumImage": {
            "type": "string",
            "description": "Merchant image URL (medium).  Visa hosts.  JPEG or GIF."
          },
          "extraTermsAndConditions": {
            "type": "string"
          }
        },
        "description": "Offer class"
      },
      "RealTimeOffersApi.Models.Event.SaveEventResponse": {
        "type": "object",
        "properties": {
          "eventId": {
            "type": "integer",
            "description": "Event Id",
            "format": "int32"
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "responseStatus": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.ResponseStatus"
          },
          "responseDateTime": {
            "type": "string",
            "description": "Response Date Time in GMT. Format 2022-01-18T22:29:12.8759678Z",
            "format": "date-time"
          }
        }
      },
      "RealTimeOffersApi.Models.MerchantGroupDeleteResponse": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "responseStatus": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.ResponseStatus"
          },
          "responseDateTime": {
            "type": "string",
            "description": "Response Date Time in GMT. Format 2022-01-18T22:29:12.8759678Z",
            "format": "date-time"
          }
        }
      },
      "RealTimeOffersApi.Models.GetSegmentationDetailsResponse": {
        "type": "object",
        "properties": {
          "messages": {
            "type": "array",
            "description": "Response status message",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.Message"
            }
          },
          "serviceKey": {
            "type": "string",
            "description": "The processor service key returned during the enrollment."
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "responseStatus": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.ResponseStatus"
          },
          "responseDateTime": {
            "type": "string",
            "description": "Response Date Time in GMT. Format 2022-01-18T22:29:12.8759678Z",
            "format": "date-time"
          },
          "segmentationDetails": {
            "type": "array",
            "description": "Segmentation details of the cardId provided in API request",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.SegmentationDetail"
            }
          }
        }
      },
      "RealTimeOffersApi.Models.UserVerification.SubmitVerificationIdRequest": {
        "required": [
          "cardId",
          "communityCode",
          "consumerVerificationId",
          "consumerVerificationMethodId",
          "userId"
        ],
        "type": "object",
        "properties": {
          "cardId": {
            "type": "string",
            "format": "uuid"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "communityCode": {
            "type": "string"
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "consumerVerificationId": {
            "type": "string",
            "format": "uuid"
          },
          "consumerVerificationMethodId": {
            "type": "string"
          }
        }
      },
      "RealTimeOffersApi.Models.AdditionalDetail": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "Name"
          },
          "Value": {
            "type": "string",
            "description": "Value"
          }
        },
        "description": "Key-Value pair object for additional Statement Credit details"
      },
      "Visa.Ice.RealTime.Enrollment.Contracts.Common.CardInfoResponse": {
        "type": "object",
        "properties": {
          "CardId": {
            "type": "string",
            "description": "Unique identifier for the Visa card, generated by Visa is returned as part of enrollment response.",
            "format": "uuid"
          },
          "CardLast4": {
            "type": "string",
            "description": "Last 4 digits of the card number"
          },
          "ProductId": {
            "type": "string",
            "description": "Card product Id. Sample Value 'F'"
          },
          "CardStatus": {
            "type": "string",
            "description": "Status of the newly enrolled card or existing card in the sytem. If re-enrollment flag is on, the response includes all active cards for the user with status of 'New' for newly enrolled card and status of 'Existing' for an already enrolled card"
          },
          "ServiceKey": {
            "type": "string",
            "description": "Service Key"
          },
          "ProductTypeCategory": {
            "type": "string",
            "description": "Card product type category. Sample Value 'Credit'"
          },
          "ProductIdDescription": {
            "type": "string",
            "description": "Card product description. Sample Value 'Visa Classic'"
          }
        }
      },
      "RealTimeOffersApi.Models.MerchantDetails": {
        "type": "object",
        "properties": {
          "isActive": {
            "type": "boolean",
            "description": "True if merchant is active in the merchant group"
          },
          "createdBy": {
            "type": "string",
            "description": "API username for the user who added the merchant to the merchant group. CYBS if added through CSC"
          },
          "isDeleted": {
            "type": "boolean",
            "description": "True if merchant is active in GMR DB"
          },
          "externalId": {
            "type": "string",
            "description": "Merchants within a merchant group can be grouped together with External ID field, defined when merchant is being added to the merchant group. ExternalId is 25-character alphanumeric (all CAPS) field which does not allow any spaces or special characters."
          },
          "modifiedBy": {
            "type": "string",
            "description": "API username for the user who edited the merchant in the merchant group. CYBS if edited through CSC"
          },
          "createdDate": {
            "type": "string",
            "description": "Date merchant was added to the merchant group",
            "format": "date-time"
          },
          "visaStoreId": {
            "type": "string",
            "description": "Visa defined unique store id"
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date the merchant record was modified/deleted",
            "format": "date-time"
          },
          "acquirerTypes": {
            "type": "array",
            "description": "Acquirer details",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.AcquirerType"
            }
          },
          "visaStoreName": {
            "type": "string",
            "description": "Normalized name for the store location"
          },
          "visaMerchantId": {
            "type": "string",
            "description": "Visa defined unique merchant id"
          },
          "visaFranchiseId": {
            "type": "string",
            "description": "Visa defined franchise id"
          },
          "visaMerchantName": {
            "type": "string",
            "description": "Normalized name for the merchant"
          },
          "visaFranchiseName": {
            "type": "string",
            "description": "Visa defined franchise name"
          },
          "merchantRawAddress": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.MerchantRawAddress"
          },
          "merchantCategoryCode": {
            "type": "string",
            "description": "Merchant category codes (MCCs) are four-digit numbers that describe a merchant's primary business activities."
          },
          "visaStoreGeoLocation": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.GeoLocation"
          },
          "endDateInMerchantGroup": {
            "type": "string",
            "description": "End date for merchant or store location. This date is used for offer qualification",
            "format": "date-time"
          },
          "startDateInMerchantGroup": {
            "type": "string",
            "description": "Start date for merchant or store location. This date is used for offer qualification",
            "format": "date-time"
          },
          "visaMerchantEnterpriseId": {
            "type": "string",
            "description": "Visa defined merchant enterprise id"
          },
          "visaStoreEnrichedAddress": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.MerchantRawAddress"
          },
          "merchantVerificationValue": {
            "type": "string",
            "description": "Merchant Verification Value or MVV refers to a value assigned by Visa used to identify participation in select merchant programs"
          },
          "visaMerchantEnterpriseName": {
            "type": "string",
            "description": "Visa defined merchant enterprise name"
          }
        }
      },
      "RealTimeOffersApi.Models.CommunityMerchantsGetResponse": {
        "type": "object",
        "properties": {
          "endIndex": {
            "type": "integer",
            "description": "Index of last record. Useful for pagination",
            "format": "int32"
          },
          "merchants": {
            "type": "array",
            "description": "List of onboarded merchants",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.OnboardedMerchantDetails"
            }
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "responseStatus": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.ResponseStatus"
          },
          "responseDateTime": {
            "type": "string",
            "description": "Response Date Time in GMT. Format 2022-01-18T22:29:12.8759678Z",
            "format": "date-time"
          },
          "countOfRemainingRecords": {
            "type": "integer",
            "description": "Count of Remaining records. Useful for pagination",
            "format": "int32"
          }
        }
      },
      "Visa.Ice.RealTime.Enrollment.Contracts.Common.UserPreferences": {
        "type": "object",
        "properties": {
          "LanguageId": {
            "type": "string",
            "description": "The unique identifier used to describe what language the user speaks. For example, \"en-US.\""
          },
          "TimeZoneId": {
            "type": "string",
            "description": "User's preferred timeZone. Format 'Pacific Standard Time'"
          },
          "TimeZoneShortCode": {
            "type": "string",
            "description": "User's preferred 3 char timeZone. Format 'PST'"
          },
          "PreferredCategoryCodes": {
            "type": "array",
            "description": "User's preferred categories of interest",
            "items": {
              "$ref": "#/components/schemas/Visa.Ice.RealTime.Enrollment.Contracts.Enrollment.CategoryInfo"
            }
          }
        },
        "description": "Data Transfer Object for User Preferences."
      },
      "RealTimeOffersApi.Models.CampaignDetails": {
        "required": ["communityCode"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Offer Name"
          },
          "isEnabled": {
            "type": "boolean",
            "description": "Is Enabled"
          },
          "campaignId": {
            "type": "integer",
            "description": "Offer ID",
            "format": "int32"
          },
          "description": {
            "type": "string"
          },
          "endDateTime": {
            "type": "string",
            "description": "Offer End Date Time",
            "format": "date-time"
          },
          "communityCode": {
            "type": "string",
            "description": "Community Code"
          },
          "startDateTime": {
            "type": "string",
            "description": "Offer Start Date Time",
            "format": "date-time"
          }
        },
        "description": "Campaign Details Fields"
      },
      "RealTimeOffersApi.Models.Events": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Event Id",
            "format": "int32"
          }
        }
      },
      "RealTimeOffersApi.Models.TransactionRequest": {
        "required": ["communityCode"],
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "Unique identifier for the user, generated by Visa and returned as part of enrollment response. Required if userKey is not part of the input request"
          },
          "userKey": {
            "type": "string",
            "description": "Unique identifier provided by VOP partner for the user – email, unique string, or mobile number. Required if userId is not part of the input request"
          },
          "cardLast4": {
            "type": "string",
            "description": "Last four digits of the Visa card"
          },
          "merchantName": {
            "type": "string",
            "description": "Merchant Name"
          },
          "communityCode": {
            "type": "string",
            "description": "Client community code, must be exact match with the community code (Root community value) provided by Visa."
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "transactionId": {
            "type": "string",
            "description": "VOP defined unique transaction ID (GUID)"
          },
          "requestDateTime": {
            "type": "string",
            "description": "Request Date Time in GMT. Format '2022-01-01T00:00:00.000Z'.",
            "format": "date-time"
          },
          "transactionDate": {
            "type": "string",
            "description": "Transaction date in GMT. Format '2022-01-01T00:00:00.000Z'. Must be +/- 2 days of transaction date",
            "format": "date-time"
          },
          "vipTransactionId": {
            "type": "string",
            "description": "Visa-generated 15-digit identifier that is unique for each original transaction. The transaction identifier (TID) is a key element that links original authorization requests to subsequent messages, such as reversals."
          },
          "transactionAmount": {
            "type": "number",
            "description": "Transaction Amount. Must be exact match with the transaction being searched",
            "format": "double"
          }
        }
      },
      "RealTimeOffersApi.Models.OfferTemplateDetails": {
        "required": ["communityCode"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Offer Name"
          },
          "templateId": {
            "type": "string",
            "description": "Offer ID"
          },
          "createdDate": {
            "type": "string",
            "description": "Created Date",
            "format": "date-time"
          },
          "description": {
            "type": "string"
          },
          "communityCode": {
            "type": "string",
            "description": "Community Code"
          },
          "templateEvents": {
            "type": "array",
            "description": "list of Template events",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.TemplateEvents"
            }
          }
        }
      },
      "RealTimeOffersApi.Models.ContactDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "VOP Contact Id"
          },
          "type": {
            "type": "integer",
            "description": "Contact Type. Format '0' - SMS, '1' - Email",
            "format": "int32",
            "enum": [0, 1]
          },
          "value": {
            "type": "string",
            "description": "Contact Value."
          },
          "countryCode": {
            "type": "string",
            "description": "The mobile country code for the user. Sample value '1' for United States"
          },
          "isPreferred": {
            "type": "boolean",
            "description": "Is Preferred Contact"
          },
          "isContactVerified": {
            "type": "boolean",
            "description": "Denotes if the contact information has been verified.  Specifically, the user has responded to a message sent via the contact channel."
          }
        },
        "description": "Contact Details Object"
      },
      "RealTimeOffersApi.Models.Event.EmailMessage": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "description": "Event action"
          },
          "senderName": {
            "type": "string",
            "description": "Sender name"
          },
          "fromAddress": {
            "type": "string",
            "description": "Sender address"
          },
          "messageName": {
            "type": "string",
            "description": "Message name"
          },
          "emailTemplateId": {
            "type": "string",
            "description": "Email templateId"
          }
        }
      },
      "RealTimeOffersApi.Models.MerchantGroupDeleteRequest": {
        "required": [
          "communityCode",
          "deleteAllMerchants",
          "merchantGroups",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Merchant Group Type, Allowed Types - 'MerchantInfo'  for Visa defined merchant ids and 'AcquirerInfo' for acquirer assigned merchant values"
          },
          "communityCode": {
            "type": "string",
            "description": "Client community code, must be exact match with the community code (CL level) provided by Visa."
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "merchantGroups": {
            "type": "array",
            "description": "Merchant group name to be deleted.",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.MerchantGroup"
            }
          },
          "deleteAllMerchants": {
            "type": "boolean",
            "description": "Setting this to true will mark all active merchants within the merchant group inactive. Allowed Values - true or false"
          }
        },
        "description": "Add Merchant Group request"
      },
      "RealTimeOffersApi.Models.UserAttribute": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "RealTimeOffersApi.Models.EnrollmentInfoResponse": {
        "type": "object",
        "properties": {
          "userKey": {
            "type": "string",
            "description": "Unique identifier provided by VOP partner for the user – email, unique string, or mobile number is sent back in the response."
          },
          "userStatus": {
            "type": "string",
            "description": "User status in VOP. Value passed is 'Active' for enrolled cards"
          },
          "browserName": {
            "type": "string",
            "description": "Name of the browser used"
          },
          "cardDetails": {
            "type": "array",
            "description": "Card details for the enrollment request",
            "items": {
              "$ref": "#/components/schemas/Visa.Ice.RealTime.Enrollment.Contracts.Common.CardInfoResponse"
            }
          },
          "communityCode": {
            "type": "string",
            "description": "Client community code sent in the request is sent back in the response."
          },
          "userProfileId": {
            "type": "string",
            "description": "Unique identifier for the user, generated by Visa is returned as part of enrollment response.",
            "format": "uuid"
          },
          "userAttributes": {
            "type": "array",
            "description": "User attributes section",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.UserAttribute"
            }
          },
          "userPreferences": {
            "$ref": "#/components/schemas/Visa.Ice.RealTime.Enrollment.Contracts.Common.UserPreferences"
          },
          "cardHolderDetails": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.UserInfoResponse"
          },
          "communityTermsVersion": {
            "type": "string",
            "description": "Version of the community terms accepted by the user"
          }
        }
      },
      "RealTimeOffersApi.Models.SaveOfferRequest": {
        "required": ["offer"],
        "type": "object",
        "properties": {
          "offer": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.Offer"
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          }
        },
        "description": "Save Offer Request class"
      },
      "RealTimeOffersApi.Models.OfferEventField": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the event conditions. For example, 'MerchantGroupName'"
          },
          "value": {
            "type": "string",
            "description": "Value for the event condition in the section. For example, 'MallSanFrancisco'"
          }
        },
        "description": "List of event conditions and values associated for offer creation"
      },
      "RealTimeOffersApi.Models.OfferUsers": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "Unique identifier for the user, generated by Visa and returned as part of enrollment response."
          },
          "userKey": {
            "type": "string",
            "description": "Unique identifier provided by VOP partner for the user – email, unique string, or mobile number."
          },
          "activationId": {
            "type": "string",
            "description": "Each successful activation request returns a unique ActivationId GUID in the response."
          },
          "operationType": {
            "type": "string",
            "description": "Activation method used for the activation. Example, ActivateOffer"
          },
          "operationStatus": {
            "type": "string",
            "description": "Returns 'Success' for a sucessful activation record"
          },
          "operationDateTime": {
            "type": "string",
            "description": "Date and time of the activation request. Example, 2022-01-03T17:59:51.387",
            "format": "date-time"
          },
          "operationProperty": {
            "type": "array",
            "description": "List of property",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.Property"
            }
          },
          "operationStatusMessage": {
            "type": "string",
            "description": "Returns 'Validation Successful' for a successful activation message"
          }
        },
        "description": "List of Offer Details Fields"
      },
      "RealTimeOffersApi.Models.MerchantSearchInfoInternal": {
        "type": "object",
        "properties": {
          "DBAName": {
            "type": "array",
            "description": "Merchant DBA Name",
            "items": {
              "type": "string"
            }
          },
          "matchScore": {
            "type": "number",
            "description": "Match Score",
            "format": "double"
          },
          "merchantUrl": {
            "type": "array",
            "description": "Merchant Url",
            "items": {
              "type": "string"
            }
          },
          "totalWeight": {
            "type": "integer",
            "description": "Total Weight",
            "format": "int32"
          },
          "visaStoreId": {
            "type": "string",
            "description": "VisaStoreId"
          },
          "merchantCity": {
            "type": "string",
            "description": "Merchant City"
          },
          "qualityIndex": {
            "type": "string",
            "description": "Quality Index"
          },
          "terminalType": {
            "type": "array",
            "description": "Terminal Type",
            "items": {
              "type": "string"
            }
          },
          "IsPSPMerchant": {
            "type": "boolean",
            "description": "IS PSP Merchant"
          },
          "merchantState": {
            "type": "string",
            "description": "Merchant State"
          },
          "visaStoreName": {
            "type": "string",
            "description": "VisaStoreName"
          },
          "visaMerchantId": {
            "type": "string",
            "description": "VisaMerchantId"
          },
          "matchIndicators": {
            "type": "array",
            "description": "Match Indicators",
            "items": {
              "type": "string"
            }
          },
          "visaMerchantName": {
            "type": "string",
            "description": "Visa Merchant Name"
          },
          "businessLegalName": {
            "type": "array",
            "description": "Business Legal Name",
            "items": {
              "type": "string"
            }
          },
          "lastTranDateRange": {
            "type": "string",
            "description": "Last Transaction Date Range"
          },
          "firstTranDateRange": {
            "type": "string",
            "description": "First Transaction Date Range"
          },
          "merchantPostalCode": {
            "type": "string",
            "description": "Merchant Postal Code"
          },
          "merchantCountryCode": {
            "type": "string",
            "description": "Merchant Country Code"
          },
          "merchantPhoneNumber": {
            "type": "array",
            "description": "merchant phone number",
            "items": {
              "type": "string"
            }
          },
          "merchantCategoryCode": {
            "type": "array",
            "description": "merchant category code",
            "items": {
              "type": "string"
            }
          },
          "merchantStreetAddress": {
            "type": "string",
            "description": "Merchant Street Address"
          },
          "paymentFacilitatorName": {
            "type": "array",
            "description": "Merchant Payment Facilitator Name",
            "items": {
              "type": "string"
            }
          },
          "paymentAcceptanceMethod": {
            "type": "array",
            "description": "Payment Acceptance Method",
            "items": {
              "type": "string"
            }
          },
          "merchantCategoryCodeDesc": {
            "type": "array",
            "description": "Merchant Category Code Desc",
            "items": {
              "type": "string"
            }
          },
          "visaMerchantEnterpriseName": {
            "type": "string",
            "description": "Visa MerchantEnterpriseName"
          },
          "primaryMerchantCategoryCode": {
            "type": "string",
            "description": "Primary Merchant Category Code"
          }
        }
      },
      "RealTimeOffersApi.Models.CategoryDetails": {
        "type": "object",
        "properties": {
          "groupCode": {
            "type": "string",
            "description": "Group Code"
          },
          "groupName": {
            "type": "string",
            "description": "Group Name"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "categories": {
            "type": "array",
            "description": "Categories",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.Category"
            }
          }
        }
      },
      "RealTimeOffersApi.Models.OfferActivation.OfferActivationDetails": {
        "type": "object",
        "properties": {
          "offerId": {
            "type": "string"
          },
          "usedCount": {
            "type": "integer",
            "format": "int32"
          },
          "activationStatus": {
            "type": "string"
          },
          "offerActivationId": {
            "type": "string"
          },
          "activationTimeStamp": {
            "type": "string",
            "format": "date-time"
          },
          "activationUsedStamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "RealTimeOffersApi.Models.EventRuleDetails": {
        "type": "object",
        "properties": {
          "ruleValue": {
            "type": "string",
            "description": "Rule Value"
          },
          "ruleOperator": {
            "type": "string",
            "description": "Rule Operator"
          },
          "attributeName": {
            "type": "string",
            "description": "Rule Attribute Name"
          }
        }
      },
      "RealTimeOffersApi.Models.Event.NotificationMessage": {
        "type": "object",
        "properties": {
          "smsMessages": {
            "type": "array",
            "description": "List of sms messages",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.Event.EventMessage"
            }
          },
          "emailMessages": {
            "type": "array",
            "description": "List of email messages",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.Event.EmailMessage"
            }
          },
          "socialMessages": {
            "type": "array",
            "description": "List of social messages",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.Event.EventMessage"
            }
          },
          "endPointMessages": {
            "type": "array",
            "description": "List of endpoint messages",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.Event.EndPointMessage"
            }
          }
        }
      },
      "RealTimeOffersApi.Models.NotificationTemplates.SaveEndPointMessageTemplateResponse": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "responseStatus": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.ResponseStatus"
          },
          "responseDateTime": {
            "type": "string",
            "description": "Response Date Time in GMT. Format 2022-01-18T22:29:12.8759678Z",
            "format": "date-time"
          },
          "notificationTemplateId": {
            "type": "string",
            "description": "Notification Template Id"
          }
        },
        "description": "Save Email Response Class"
      },
      "RealTimeOffersApi.Models.Event.EventAction": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Event Action Name"
          },
          "value": {
            "type": "string",
            "description": "Action Value - allowed values? TODO"
          },
          "properties": {
            "type": "array",
            "description": "Action Properties",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.Event.RuleProperty"
            }
          }
        }
      },
      "RealTimeOffersApi.Models.NotificationTemplates.PreviewEmailResponse": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "responseStatus": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.ResponseStatus"
          },
          "responseDateTime": {
            "type": "string",
            "description": "Response Date Time in GMT. Format 2022-01-18T22:29:12.8759678Z",
            "format": "date-time"
          }
        },
        "description": "Preview Email Response class"
      },
      "RealTimeOffersApi.Models.UserVerification.SubmitVerificationIdResponse": {
        "type": "object",
        "properties": {
          "cardId": {
            "type": "string",
            "format": "uuid"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "otpDetails": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.UserVerification.ConsumerValidationOtpDetails"
          },
          "communityCode": {
            "type": "string"
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "responseStatus": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.ResponseStatus"
          },
          "responseDateTime": {
            "type": "string",
            "description": "Response Date Time in GMT. Format 2022-01-18T22:29:12.8759678Z",
            "format": "date-time"
          },
          "consumerVerificationId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "RealTimeOffersApi.Models.OfferDetailsResponse": {
        "type": "object",
        "properties": {
          "offerDetails": {
            "type": "array",
            "description": "Offer Details",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.OfferDetails"
            }
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "responseStatus": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.ResponseStatus"
          },
          "responseDateTime": {
            "type": "string",
            "description": "Response Date Time in GMT. Format 2022-01-18T22:29:12.8759678Z",
            "format": "date-time"
          }
        }
      },
      "RealTimeOffersApi.Models.VisaMerchantDetails": {
        "required": ["visaMerchantId"],
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean",
            "description": "Status Code - Populated as true for success, false for failure"
          },
          "externalId": {
            "type": "string",
            "description": "Merchants within a merchant group can be grouped together with External ID field, defined when merchant is being added to the merchant group. ExternalId is 25-character alphanumeric (all CAPS) field which does not allow any spaces or special characters."
          },
          "visaStoreId": {
            "type": "string",
            "description": "Visa defined unique store id"
          },
          "statusMessage": {
            "type": "string",
            "description": "Status Message - Populated for all cases"
          },
          "visaMerchantId": {
            "type": "string",
            "description": "Visa defined unique merchant id"
          },
          "visaFranchiseId": {
            "type": "string",
            "description": "Visa defined unique merchant franchise id"
          },
          "endDateInMerchantGroup": {
            "type": "string",
            "description": "End Date in Merchant Group",
            "format": "date-time"
          },
          "startDateInMerchantGroup": {
            "type": "string",
            "description": "Start Date in Merchant Groups",
            "format": "date-time"
          },
          "visaMerchantEnterpriseId": {
            "type": "string",
            "description": "Visa defined unique merchant enterprise id"
          }
        },
        "description": "List of merchants to add to the merchant group or delete from the merchant group"
      },
      "RealTimeOffersApi.Models.Property": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Specify the property name"
          },
          "value": {
            "type": "string",
            "description": "Specify the property value"
          }
        },
        "description": "A list of objects"
      },
      "RealTimeOffersApi.Models.Event.EventRule": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Rule Name"
          },
          "value": {
            "type": "string",
            "description": "Rule Value"
          },
          "ruleType": {
            "type": "integer",
            "description": "Event Rule Type",
            "format": "int32",
            "enum": [0, 1, 2, 3, 4, 5, 6]
          },
          "constraints": {
            "type": "array",
            "description": "Event Rule Constraints",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.Property"
            }
          },
          "ruleOperator": {
            "type": "integer",
            "description": "Rule Operator",
            "format": "int32",
            "enum": [
              0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17
            ]
          },
          "ruleProperties": {
            "type": "array",
            "description": "Event Rule Property",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.Event.RuleProperty"
            }
          }
        }
      },
      "RealTimeOffersApi.Models.CommunityGetResponse": {
        "type": "object",
        "properties": {
          "community": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.CommunityDetails"
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "responseStatus": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.ResponseStatus"
          },
          "responseDateTime": {
            "type": "string",
            "description": "Response Date Time in GMT. Format 2022-01-18T22:29:12.8759678Z",
            "format": "date-time"
          }
        }
      },
      "RealTimeOffersApi.Models.OfferTemplateDetailsResponse": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "responseStatus": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.ResponseStatus"
          },
          "responseDateTime": {
            "type": "string",
            "description": "Response Date Time in GMT. Format 2022-01-18T22:29:12.8759678Z",
            "format": "date-time"
          },
          "offerTemplateDetailsList": {
            "type": "array",
            "description": "Offer template details list",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.OfferTemplateDetails"
            }
          }
        }
      },
      "RealTimeOffersApi.Models.GetUsersByCardDetailRequest": {
        "required": ["cardDetail", "cardDetailType", "communityCode"],
        "type": "object",
        "properties": {
          "cardDetail": {
            "type": "string",
            "description": "Card detail value"
          },
          "communityCode": {
            "type": "string",
            "description": "Client community code, must be exact match with the community code (Root community value) provided by Visa."
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "cardDetailType": {
            "type": "string",
            "description": "Values can be: PAN, ServiceKey or ServiceRecordId"
          }
        }
      },
      "RealTimeOffersApi.Models.Transaction": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "Unique identifier for the user, generated by Visa and returned as part of enrollment response.",
            "format": "uuid"
          },
          "eventId": {
            "type": "integer",
            "description": "Event id that the transaction qualified for",
            "format": "int32"
          },
          "offerId": {
            "type": "integer",
            "description": "Offer id that the transaction qualified for",
            "format": "int32"
          },
          "userKey": {
            "type": "string",
            "description": "Unique identifier provided by VOP partner for the user – email, unique string, or mobile number."
          },
          "cardLast4": {
            "type": "string",
            "description": "Last four digits of the Visa card"
          },
          "acquirerBin": {
            "type": "string",
            "description": "Acquiring Identifier, formerly known as Acquiring BIN"
          },
          "visaStoreId": {
            "type": "integer",
            "description": "Visa defined unique store id",
            "format": "int32"
          },
          "endPointName": {
            "type": "string",
            "description": "EndPoint Message (EPM) name defined in the system"
          },
          "merchantCity": {
            "type": "string",
            "description": "City of the merchant"
          },
          "settlementId": {
            "type": "string",
            "description": "Visa generated unique identifier for the settlement transaction."
          },
          "transactionId": {
            "type": "string",
            "description": "VOP generated unique transaction id"
          },
          "visaStoreName": {
            "type": "string",
            "description": "Normalized name for the store location"
          },
          "visaMerchantId": {
            "type": "integer",
            "description": "Visa defined unique merchant id",
            "format": "int32"
          },
          "transactionDate": {
            "type": "string",
            "description": "Transaction date and timestamp",
            "format": "date-time"
          },
          "transactionType": {
            "type": "string",
            "description": "Transaction Type - Authorization, Settlement, Return"
          },
          "vipTransactionId": {
            "type": "string",
            "description": "Visa generated 15-digit identifier that is unique for each original transaction. The transaction identifier (TID) is a key element that links original authorization requests to subsequent messages, such as reversals."
          },
          "visaMerchantName": {
            "type": "string",
            "description": "Normalized name for the merchant"
          },
          "merchantStateCode": {
            "type": "string",
            "description": "State of the merchant"
          },
          "transactionAmount": {
            "type": "number",
            "description": "Transaction acquirer/merchant amount",
            "format": "double"
          },
          "merchantPostalCode": {
            "type": "string",
            "description": "Postal code of the merchant"
          },
          "merchantCountryCode": {
            "type": "string",
            "description": "Country code of the merchant"
          },
          "transactionUSDAmount": {
            "type": "number",
            "description": "Transaction USD Amount",
            "format": "double"
          },
          "externalNotificationId": {
            "type": "string",
            "description": "External Notification Id that was sent to the client when the transaction was processed by VOP",
            "format": "uuid"
          },
          "transactionCurrencyCode": {
            "type": "integer",
            "description": "Transaction acquirer/merchant currency code",
            "format": "int32"
          },
          "transactionReceivedDate": {
            "type": "string",
            "description": "Date and timestamp the transaction was received by VOP",
            "format": "date-time"
          },
          "acquirerCardAcceptenceId": {
            "type": "string",
            "description": "The Card Acceptor ID (CAID) is a unique identifier number for the originator of transfers. Typically, an ID is between 1 and 15 characters and is assigned for each store location"
          },
          "transactionBillingAmount": {
            "type": "number",
            "description": "Transaction issuer/billing amount",
            "format": "double"
          },
          "transactionBillingCurrencyCode": {
            "type": "integer",
            "description": "Transaction issuer/billing currency code",
            "format": "int32"
          }
        },
        "description": "Transaction class"
      },
      "RealTimeOffersApi.Models.MerchantOnboardResponse": {
        "type": "object",
        "properties": {
          "StatusCode": {
            "type": "integer",
            "description": "Indicates whether the request was successful or not. Return value can be 0, 1 or 2. 'FullyOnBoarded = 0, PartiallyOnBoarded = 1, FullyFailed = 2'",
            "format": "int32"
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "responseStatus": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.ResponseStatus"
          },
          "merchantDetails": {
            "type": "array",
            "description": "A list of Merchant objects",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.Merchant"
            }
          },
          "responseDateTime": {
            "type": "string",
            "description": "Response Date Time in GMT. Format 2022-01-18T22:29:12.8759678Z",
            "format": "date-time"
          },
          "requestProperties": {
            "type": "object",
            "properties": {},
            "description": "Request properties"
          }
        },
        "description": "Merchant onboard response class"
      },
      "RealTimeOffersApi.Models.MerchantAcquirerDetails": {
        "required": ["acquirerBin", "cardAcceptorId"],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status code - Populated as true for success, false for failure"
          },
          "isActive": {
            "type": "boolean",
            "description": "True if merchant is active in the merchant group"
          },
          "createdBy": {
            "type": "string",
            "description": "API username for the user who added the merchant to the merchant group. CYBS if added through CSC"
          },
          "externalId": {
            "type": "string",
            "description": "Merchants within a merchant group can be grouped together with External ID field, defined when merchant is being added to the merchant group. ExternalId is 25-character alphanumeric (all CAPS) field which does not allow any spaces or special characters."
          },
          "modifiedBy": {
            "type": "string",
            "description": "API username or VDP project Id for the user who edited the merchant in the merchant group. CYBS if edited through CSC"
          },
          "acquirerBin": {
            "type": "string",
            "description": "Acquiring Identifier, formerly known as Acquiring BIN"
          },
          "createdDate": {
            "type": "string",
            "description": "Date merchant was added to the merchant group",
            "format": "date-time"
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date the merchant record was modified/deleted",
            "format": "date-time"
          },
          "statusMessage": {
            "type": "string",
            "description": "Status message"
          },
          "cardAcceptorId": {
            "type": "string",
            "description": "The Card Acceptor ID (CAID) is a unique identifier number for the originator of transfers. Typically, an ID is between 1 and 15 characters and is assigned for each store location"
          },
          "endDateInMerchantGroup": {
            "type": "string",
            "description": "Date the merchant should stop qualifying if included in an offer (GMT). Format \"2022-10-17T18:00:00.000Z\"",
            "format": "date-time"
          },
          "startDateInMerchantGroup": {
            "type": "string",
            "description": "Date the merchant should start qualifying if included in an offer (GMT). Format \"2022-03-17T18:00:00.000Z\"",
            "format": "date-time"
          }
        },
        "description": "List of merchants to add to the merchant group or delete from the merchant group"
      },
      "RealTimeOffersApi.Models.TransactionDetails": {
        "type": "object",
        "properties": {
          "authCode": {
            "type": "string",
            "description": "6 AN\r\nAcceptable characters are A–Z in uppercase, 0–9, and spaces. The field should not contain\r\nall zeros or all spaces; however, acquirers must be able to receive all zeros or all blanks.\r\nNo special characters are allowed."
          },
          "acquirerBin": {
            "type": "string",
            "description": "Acquiring Identifier, formerly known as Acquiring BIN"
          },
          "cardFirstSix": {
            "type": "string",
            "description": "First six digits of Visa card"
          },
          "cardLastFour": {
            "type": "string",
            "description": "Last four digits of the Visa card"
          },
          "transactionId": {
            "type": "string",
            "description": "Visa-generated 15-digit identifier that is unique for each original transaction. The transaction identifier (TID) is a key element that links original authorization requests to subsequent messages, such as reversals."
          },
          "cardAcceptorId": {
            "type": "string",
            "description": "The Card Acceptor ID(CAID) is a unique identifier number for the originator of transfers.Typically, an ID is between 1 and 15 characters and is assigned for each store location"
          },
          "merchantPostalCode": {
            "type": "string",
            "description": "Postal code for the merchant"
          },
          "transactionDateTime": {
            "type": "string",
            "description": "Transaction Date Time in GMT. Format '2022-01-18T00:00:00'",
            "format": "date-time"
          },
          "transactionCurrencyCode": {
            "type": "string",
            "description": "This value is a 3–digit numeric code that defines the merchant currency"
          },
          "transactionMerchantAmount": {
            "type": "number",
            "description": "Acquirer/Merchant transaction amount",
            "format": "double"
          }
        },
        "description": "Transaction Details. If included, DO NOT include tokens or cards section"
      },
      "RealTimeOffersApi.Models.UserVerification.ConsumerValidationOtpDetails": {
        "type": "object",
        "properties": {
          "otpExpirationMinutes": {
            "type": "integer",
            "format": "int32"
          },
          "maxOtpRequestsAllowed": {
            "type": "integer",
            "format": "int32"
          },
          "maxOtpVerificationAllowed": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "RealTimeOffersApi.Models.NotificationTemplates.SaveEmailTemplateRequest": {
        "required": [
          "body",
          "communityCode",
          "defaultLanguage",
          "name",
          "subject"
        ],
        "type": "object",
        "properties": {
          "body": {
            "type": "string",
            "description": "Message details"
          },
          "name": {
            "type": "string",
            "description": "The message name for this message.\r\nMessage name + community code forms the buisness PK.\r\nRequired."
          },
          "subject": {
            "type": "string",
            "description": "The email subject line."
          },
          "provider": {
            "type": "string",
            "description": "Email Provider"
          },
          "communityCode": {
            "type": "string",
            "description": "The code of the Community"
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "defaultLanguage": {
            "type": "string",
            "description": "If the customers prefered language is not specified in the list of available messages\r\nfor the given channel then use this language.\r\nThis value must be present for one SMS for this community and this message name."
          },
          "emailTemplateId": {
            "type": "string",
            "description": "Email template ID"
          }
        },
        "description": "Save Email Request class"
      },
      "RealTimeOffersApi.Models.Event.GetEventMessageDetailsResponse": {
        "type": "object",
        "properties": {
          "channelType": {
            "type": "string",
            "description": "Channel Type"
          },
          "messageName": {
            "type": "string",
            "description": "Message Name"
          },
          "communityCode": {
            "type": "string",
            "description": "Community Code"
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "responseStatus": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.ResponseStatus"
          },
          "createdDateTime": {
            "type": "string",
            "description": "Create Time",
            "format": "date-time"
          },
          "modifiedDateTime": {
            "type": "string",
            "description": "Modify Time",
            "format": "date-time"
          },
          "responseDateTime": {
            "type": "string",
            "description": "Response Date Time in GMT. Format 2022-01-18T22:29:12.8759678Z",
            "format": "date-time"
          },
          "defaultLanguageCode": {
            "type": "string",
            "description": "Default Language Code"
          },
          "sustitutionVariables": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.Event.SustitutionVariables"
          }
        }
      },
      "RealTimeOffersApi.Models.MerchantIdentificationDetails": {
        "required": ["communityCode"],
        "type": "object",
        "properties": {
          "storeId": {
            "type": "string",
            "description": "Store Id"
          },
          "merchantId": {
            "type": "string",
            "description": "Merchant Id"
          },
          "acquirerBid": {
            "type": "string",
            "description": "Acquirer Bid"
          },
          "acquirerBin": {
            "type": "string",
            "description": "Acquirer Bin"
          },
          "acquirerMid": {
            "type": "string",
            "description": "Acquirer Mid"
          },
          "merchantUrl": {
            "type": "string",
            "description": "Merchant Url"
          },
          "merchantCity": {
            "type": "string",
            "description": "Merchant City"
          },
          "merchantName": {
            "type": "string",
            "description": "Merchant Name"
          },
          "communityCode": {
            "type": "string",
            "description": "Community Code which is mandatory"
          },
          "merchantState": {
            "type": "string",
            "description": "Merchant State"
          },
          "cardAcceptorId": {
            "type": "string",
            "description": "Card Acceptor Id"
          },
          "merchantPostalCode": {
            "type": "string",
            "description": "Merchant Postal Code"
          },
          "merchantSearchType": {
            "type": "string",
            "description": "Merchant Search Type"
          },
          "merchantCountryCode": {
            "type": "string",
            "description": "Merchant Country Code"
          },
          "merchantPhoneNumber": {
            "type": "string",
            "description": "Merchant Phone Number"
          },
          "merchantStreetAddress": {
            "type": "string",
            "description": "Merchant Street Address"
          },
          "returnMatchIndicators": {
            "type": "boolean",
            "description": "Merchant Return Match Indicators"
          },
          "businessRegistrationId": {
            "type": "string",
            "description": "Business registration Id"
          },
          "merchantIdentificationId": {
            "type": "string",
            "description": "Merchant Identification Id"
          }
        },
        "description": "Merchant Class"
      },
      "RealTimeOffersApi.Models.GeoLocation": {
        "type": "object",
        "properties": {
          "latitude": {
            "type": "number",
            "description": "Location address latitude",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "description": "Location address longitude",
            "format": "double"
          },
          "geolocationType": {
            "type": "integer",
            "format": "int32",
            "enum": [0, 1]
          }
        },
        "description": "Location details of store location"
      },
      "RealTimeOffersApi.Models.UserVerification.ValidateOtpResponse": {
        "type": "object",
        "properties": {
          "cardId": {
            "type": "string",
            "format": "uuid"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "cardStatus": {
            "type": "string"
          },
          "userStatus": {
            "type": "string"
          },
          "communityCode": {
            "type": "string"
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "responseStatus": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.ResponseStatus"
          },
          "responseDateTime": {
            "type": "string",
            "description": "Response Date Time in GMT. Format 2022-01-18T22:29:12.8759678Z",
            "format": "date-time"
          }
        }
      },
      "RealTimeOffersApi.Models.CampaignDetailsResponse": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "responseStatus": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.ResponseStatus"
          },
          "campaignDetails": {
            "type": "array",
            "description": "Campaign Details",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.CampaignDetails"
            }
          },
          "responseDateTime": {
            "type": "string",
            "description": "Response Date Time in GMT. Format 2022-01-18T22:29:12.8759678Z",
            "format": "date-time"
          }
        }
      },
      "RealTimeOffersApi.Models.MerchantIdentificationByRefIdResp": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status"
          },
          "storeId": {
            "type": "string",
            "description": "Store Id"
          },
          "merchantId": {
            "type": "string",
            "description": "Merchant Id"
          },
          "acquirerBin": {
            "type": "string",
            "description": "Acquirer Bin"
          },
          "cardAcceptorId": {
            "type": "string",
            "description": "Card Acceptor Id"
          },
          "merchantDetailsResponse": {
            "type": "array",
            "description": "List of Merchant Details",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.MerchantSearchInfo"
            }
          },
          "merchantIdentificationId": {
            "type": "string",
            "description": "Merchant Identification Id"
          }
        }
      },
      "RealTimeOffersApi.Models.OfferActivation.OfferActivationRequest": {
        "required": ["communityCode", "userId"],
        "type": "object",
        "properties": {
          "toDate": {
            "type": "string",
            "format": "date-time"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "fromDate": {
            "type": "string",
            "format": "date-time"
          },
          "communityCode": {
            "type": "string",
            "description": "Community Code"
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          }
        }
      },
      "RealTimeOffersApi.Models.MerchantGroup": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Merchant Group Name. Case-sensitive alphanumeric value of upto 100 characters. Special characters not allowed."
          }
        }
      },
      "RealTimeOffersApi.Models.User": {
        "required": ["cards", "communityCode", "userKey"],
        "type": "object",
        "properties": {
          "cards": {
            "type": "array",
            "description": "User card details. If included, DO NOT include transactionDetails or tokens section",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.CardDetails"
            }
          },
          "tokens": {
            "type": "array",
            "description": "User Token Details. If included, DO NOT include transactionDetails or cards section",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.Token"
            }
          },
          "userId": {
            "type": "string",
            "description": "Unique identifier for the user, generated by Visa and returned as part of enrollment response. Required if userKey is not part of the input request",
            "format": "uuid"
          },
          "userKey": {
            "type": "string",
            "description": "Unique identifier provided by VOP partner for the user – email, unique string, or mobile number. Required if userId is not part of the input request"
          },
          "contacts": {
            "type": "array",
            "description": "User contact details",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.ContactDetails"
            }
          },
          "lastName": {
            "type": "string",
            "description": "Last Name"
          },
          "firstName": {
            "type": "string",
            "description": "First Name"
          },
          "promoCode": {
            "type": "string",
            "description": "Promotional code associated with the enrollment of the user. VOP sets the PromoCode to upper case upon receipt.Alphanumeric.No special characters. Can be used as targeting criteria in offers."
          },
          "languageId": {
            "type": "string",
            "description": "User's preferred language. Format 'en-US'"
          },
          "referrerId": {
            "type": "string",
            "description": "To be deprecated"
          },
          "timeZoneId": {
            "type": "string",
            "description": "User's preferred timeZone. Format 'Pacific Standard Time'"
          },
          "userStatus": {
            "type": "integer",
            "description": "User status, returned in enrollment response. Format 0 - Pending, 1 - Active, 2 - Inactive, 3 - Locked, 4 - Blocked",
            "format": "int32",
            "enum": [0, 1, 2, 3, 4]
          },
          "communityCode": {
            "type": "string",
            "description": "Client community code, must be exact match with the community code (Root community value) provided by Visa."
          },
          "enrollDateTime": {
            "type": "string",
            "description": "Date and time of user enrollment in GMT, returned in enrollment response. Format '2022-01-19T23:25:17.213979Z'",
            "format": "date-time"
          },
          "externalUserId": {
            "type": "string",
            "description": "An alphanumeric user identifier of arbitrary length supplied by a partner that\tidentifies a user within his or her application.Supplied as part of an enrollment request and returned as part of the response. Same as UserKey"
          },
          "userAttributes": {
            "type": "array",
            "description": "List of all user's additional attributes",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.Property"
            }
          },
          "membershipNumber": {
            "type": "string",
            "description": "A special identification number internal that can be used as unique identifier for the cardholder."
          },
          "timeZoneShortCode": {
            "type": "string",
            "description": "User's preferred 3 char timeZone. Format 'PST'"
          },
          "transactionDetails": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.TransactionDetails"
          },
          "preferredCategories": {
            "type": "array",
            "description": "User preferred categories",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.CategoryDetails"
            }
          }
        },
        "description": "User class"
      },
      "RealTimeOffersApi.Models.RewardResponse": {
        "type": "object",
        "properties": {
          "rewardId": {
            "type": "string",
            "description": "Unique GUID value generated by VOP for the statement credit request"
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "responseStatus": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.ResponseStatus"
          },
          "responseDateTime": {
            "type": "string",
            "description": "Response Date Time in GMT. Format 2022-01-18T22:29:12.8759678Z",
            "format": "date-time"
          },
          "requestProperties": {
            "type": "object",
            "properties": {},
            "description": "Request Properties"
          }
        },
        "description": "Reward Response class"
      },
      "RealTimeOffersApi.Models.UpdatedCommunityInfo": {
        "type": "object",
        "properties": {
          "levelType": {
            "type": "integer",
            "description": "Level Type",
            "format": "int32"
          },
          "communityCode": {
            "type": "string",
            "description": "Community code"
          }
        }
      },
      "RealTimeOffersApi.Models.AddCardRequest": {
        "required": ["card", "communityCode", "userId"],
        "type": "object",
        "properties": {
          "card": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.CardDetails"
          },
          "token": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.Token"
          },
          "userId": {
            "type": "string",
            "description": "Unique identifier for the user, generated by Visa and returned as part of enrollment response. Required if userKey is not part of the input request",
            "format": "uuid"
          },
          "userKey": {
            "type": "string",
            "description": "Unique identifier provided by VOP partner for the user – email, unique string, or mobile number. Required if userId is not part of the input request"
          },
          "communityCode": {
            "type": "string",
            "description": "Client community code, must be exact match with the community code (Root community value) provided by Visa."
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "transactionDetails": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.TransactionDetails"
          }
        }
      },
      "RealTimeOffersApi.Models.CardDetails": {
        "required": ["cardNumber"],
        "type": "object",
        "properties": {
          "cvv2": {
            "type": "string",
            "description": "The Cvv 2 number on the back of the card. Three digits"
          },
          "cardId": {
            "type": "string",
            "description": "Unique ID for the Visa card returned by VOP after a successful enrollment. Once obtained it may be used instead of the CardNumber.",
            "format": "uuid"
          },
          "cardLast4": {
            "type": "string",
            "description": "Last 4 digits of the card number"
          },
          "productId": {
            "type": "string",
            "description": "Card product Id. Sample Value 'F'"
          },
          "cardNumber": {
            "type": "string",
            "description": "The user’s card number that is associated with the enrollment. Only numeric characters."
          },
          "cardStatus": {
            "type": "string",
            "description": "Status of the newly enrolled card or existing card in the system. If re-enrollment flag is on, the response includes all active cards for the user with status of 'New' for newly enrolled card and status of 'Existing' for an already enrolled card"
          },
          "nameOnCard": {
            "type": "string",
            "description": "Name as it appears on the Visa card."
          },
          "serviceKey": {
            "type": "string",
            "description": "Visa internal field"
          },
          "billingZipCode": {
            "type": "string",
            "description": "Billing Zip code for the card account number"
          },
          "expirationYear": {
            "type": "integer",
            "description": "The Year the card expires YYYY.  Year cannot be in the past.",
            "format": "int32"
          },
          "expirationMonth": {
            "type": "integer",
            "description": "The Month the card expires MM.  Month must be between 01 and 12 inclusive.",
            "format": "int32"
          },
          "productTypeCategory": {
            "type": "string",
            "description": "Card product type category. Sample Value 'Credit'"
          },
          "productIdDescription": {
            "type": "string",
            "description": "Card product description. Sample Value 'Visa Classic'"
          }
        },
        "description": "Card Details Class"
      },
      "RealTimeOffersApi.Models.Event.DisableEventResponse": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "responseStatus": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.ResponseStatus"
          },
          "responseDateTime": {
            "type": "string",
            "description": "Response Date Time in GMT. Format 2022-01-18T22:29:12.8759678Z",
            "format": "date-time"
          }
        }
      },
      "RealTimeOffersApi.Models.MerchantIdentification": {
        "type": "object",
        "properties": {
          "storeId": {
            "type": "string",
            "description": "Store Id"
          },
          "merchantId": {
            "type": "string",
            "description": "Merchant Id"
          },
          "acquirerBin": {
            "type": "string",
            "description": "Acquirer Bin"
          },
          "cardAcceptorId": {
            "type": "string",
            "description": "Card Acceptor Id"
          }
        }
      },
      "RealTimeOffersApi.Models.Country": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "Display name of country"
          },
          "phoneCountryCode": {
            "type": "string",
            "description": "Phone's country code"
          },
          "numericCountryCode": {
            "type": "integer",
            "description": "Three-digit ISO code",
            "format": "int32"
          },
          "phoneDisplayFormat": {
            "type": "string",
            "description": "Display format of phone number"
          },
          "twoLetterCountryCode": {
            "type": "string",
            "description": "Two letter country code"
          },
          "threeLetterCountryCode": {
            "type": "string",
            "description": "Three letter country code"
          }
        }
      },
      "RealTimeOffersApi.Models.GetSegmentationDetailsRequest": {
        "type": "object",
        "properties": {
          "cardId": {
            "type": "string",
            "description": "Unique ID for the Visa card returned by VOP after a successful enrollment"
          },
          "serviceKey": {
            "type": "string",
            "description": "the processor service key returned during the enrollment."
          },
          "communityCode": {
            "type": "string",
            "description": "Client community code, must be exact match with the community code (Root community value) provided by Visa."
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          }
        }
      },
      "RealTimeOffersApi.Models.OfferActivityByUserResponse": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "Unique identifier for the user, generated by Visa and returned as part of enrollment response."
          },
          "userKey": {
            "type": "string",
            "description": "Unique identifier provided by VOP partner for the user – email, unique string, or mobile number."
          },
          "endIndex": {
            "type": "integer",
            "description": "Last record number included in the response",
            "format": "int32"
          },
          "communityCode": {
            "type": "string",
            "description": "Client community code sent in the request is sent back in the response."
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "responseStatus": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.ResponseStatus"
          },
          "responseDateTime": {
            "type": "string",
            "description": "Response Date Time in GMT. Format 2022-01-18T22:29:12.8759678Z",
            "format": "date-time"
          },
          "offerOperationDetails": {
            "type": "array",
            "description": "Activation request details",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.OfferOperationDetails"
            }
          },
          "countOfRemainingRecords": {
            "type": "integer",
            "description": "Count on remaining records based on the search criteria",
            "format": "int32"
          }
        }
      },
      "RealTimeOffersApi.Models.OnboardedMerchantDetails": {
        "type": "object",
        "properties": {
          "isActive": {
            "type": "boolean",
            "description": "Is Merchant Active?"
          },
          "visaStoreId": {
            "type": "string",
            "description": "Visa store id"
          },
          "visaStoreName": {
            "type": "string",
            "description": "Visa store name"
          },
          "visaMerchantId": {
            "type": "string",
            "description": "Visa merchant id"
          },
          "isPretaxCapable": {
            "type": "boolean",
            "description": "Is Pre tax Capable?"
          },
          "visaFranchiseId": {
            "type": "string",
            "description": "Visa Franchise Id"
          },
          "createdTimeStamp": {
            "type": "string",
            "description": "Record created date/time",
            "format": "date-time"
          },
          "visaMerchantName": {
            "type": "string",
            "description": "Visa merchant name"
          },
          "merchantGroupName": {
            "type": "string",
            "description": "Merchant Group Name"
          },
          "visaFranchiseName": {
            "type": "string",
            "description": "Visa franchise name"
          },
          "isOnboardingActive": {
            "type": "boolean",
            "description": "Is Onboarding Active?"
          },
          "endDateInMerchantGroup": {
            "type": "string",
            "description": "Merchant end date/time in merchant group",
            "format": "date-time"
          },
          "isPOSRedemptionCapable": {
            "type": "boolean",
            "description": "Is POS Redemption Capable?"
          },
          "isPerUnitDiscountCapable": {
            "type": "boolean",
            "description": "Is Per-unit Discount Capable?"
          },
          "startDateInMerchantGroup": {
            "type": "string",
            "description": "Merchant start date/time in merchant group",
            "format": "date-time"
          },
          "visaMerchantEnterpriseId": {
            "type": "string",
            "description": "Visa Merchant Enterprise Id"
          },
          "visaMerchantEnterpriseName": {
            "type": "string",
            "description": "Visa merchant enterprise name"
          }
        }
      },
      "RealTimeOffersApi.Models.Event.EventDetailActionMessages": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "propertyName": {
            "type": "string"
          },
          "attributeType": {
            "type": "string"
          },
          "propertyValue": {
            "type": "string"
          }
        }
      },
      "RealTimeOffersApi.Models.CommunityCategoryGroups": {
        "type": "object",
        "properties": {
          "groupCode": {
            "type": "string",
            "description": "Group Code"
          },
          "groupName": {
            "type": "string",
            "description": "Group Name"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "supportedCategories": {
            "type": "array",
            "description": "Categories",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.CommunityCategory"
            }
          }
        }
      },
      "RealTimeOffersApi.Models.Event.EventMerchantRules": {
        "type": "object",
        "properties": {
          "ruleName": {
            "type": "string"
          },
          "ruleValue": {
            "type": "string"
          },
          "externalId": {
            "type": "string"
          },
          "communityCode": {
            "type": "string"
          },
          "merchantGroupName": {
            "type": "string"
          }
        }
      },
      "RealTimeOffersApi.Models.SaveOfferResponse": {
        "type": "object",
        "properties": {
          "offerID": {
            "type": "integer",
            "description": "Save Offer Response offer Id",
            "format": "int32"
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "responseStatus": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.ResponseStatus"
          },
          "responseDateTime": {
            "type": "string",
            "description": "Response Date Time in GMT. Format 2022-01-18T22:29:12.8759678Z",
            "format": "date-time"
          }
        },
        "description": "Save Offer Response class"
      },
      "RealTimeOffersApi.Models.DeActivationResponse": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "responseStatus": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.ResponseStatus"
          },
          "responseDateTime": {
            "type": "string",
            "description": "Response Date Time in GMT. Format 2022-01-18T22:29:12.8759678Z",
            "format": "date-time"
          }
        },
        "description": "Activation Response Class"
      },
      "RealTimeOffersApi.Models.SubGroup": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Sub group name"
          },
          "values": {
            "type": "string",
            "description": "Sub  group values"
          }
        }
      },
      "RealTimeOffersApi.Models.GetUserEnrollmentRecordResponse": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "responseStatus": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.ResponseStatus"
          },
          "enrollmentRecord": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.EnrollmentInfoResponse"
          },
          "responseDateTime": {
            "type": "string",
            "description": "Response Date Time in GMT. Format 2022-01-18T22:29:12.8759678Z",
            "format": "date-time"
          }
        }
      },
      "RealTimeOffersApi.Models.NotificationTemplates.SaveEndPointMessageTemplateRequest": {
        "required": [
          "communityCode",
          "defaultLanguage",
          "name",
          "systemFields"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The message name for this message.\r\nMessage name + community code forms the buisness PK.\r\nRequired."
          },
          "systemFields": {
            "type": "array",
            "description": "List of System defined fields",
            "items": {
              "type": "string"
            }
          },
          "communityCode": {
            "type": "string",
            "description": "The code of the Community"
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "defaultLanguage": {
            "type": "string",
            "description": "If the customers prefered language is not specified in the list of available messages\r\nfor the given channel then use this language.\r\nThis value must be present for one SMS for this community and this message name."
          },
          "userDefinedFields": {
            "type": "array",
            "description": "List of User Define fields",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Save End Point Message Template Request class"
      },
      "RealTimeOffersApi.Models.Event.SaveEventRequest": {
        "required": ["eventDetails"],
        "type": "object",
        "properties": {
          "eventDetails": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.Event.EventDetails"
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          }
        },
        "description": "Event request"
      },
      "RealTimeOffersApi.Models.Event.GetEventDetailsResponse": {
        "type": "object",
        "properties": {
          "eventDetail": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.Event.GetEventDetails"
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "responseStatus": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.ResponseStatus"
          },
          "responseDateTime": {
            "type": "string",
            "description": "Response Date Time in GMT. Format 2022-01-18T22:29:12.8759678Z",
            "format": "date-time"
          }
        }
      },
      "RealTimeOffersApi.Models.SaveAcquirerDetailsInMerchantGroupRequest": {
        "required": [
          "communityCode",
          "merchantAcquirerDetails",
          "merchantGroupName"
        ],
        "type": "object",
        "properties": {
          "communityCode": {
            "type": "string",
            "description": "Client community code, must be exact match with the community code (CL level) provided by Visa."
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "merchantGroupName": {
            "type": "string",
            "description": "Merchant Group name, must be an exact match to existing merchant group name of type AcquirerInfo"
          },
          "merchantAcquirerDetails": {
            "type": "array",
            "description": "List of merchants to add to the merchant group or delete from the merchant group",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.MerchantAcquirerDetails"
            }
          }
        }
      },
      "RealTimeOffersApi.Models.DeleteCardRequest": {
        "required": ["communityCode"],
        "type": "object",
        "properties": {
          "card": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.CardDetails"
          },
          "userId": {
            "type": "string",
            "description": "Unique identifier for the user, generated by Visa and returned as part of enrollment response. Required if userKey is not part of the input request",
            "format": "uuid"
          },
          "userKey": {
            "type": "string",
            "description": "Unique identifier provided by VOP partner for the user – email, unique string, or mobile number. Required if userId is not part of the input request"
          },
          "communityCode": {
            "type": "string",
            "description": "Client community code, must be exact match with the community code (Root community value) provided by Visa."
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          }
        }
      },
      "RealTimeOffersApi.Models.TransactionReplayRequest": {
        "type": "object",
        "properties": {
          "events": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "settlementId": {
            "type": "string"
          },
          "communityCode": {
            "type": "string"
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "transactionId": {
            "type": "string"
          },
          "transactionType": {
            "type": "string"
          },
          "viptransactionId": {
            "type": "string"
          }
        }
      },
      "RealTimeOffersApi.Models.CommunityDetails": {
        "type": "object",
        "properties": {
          "isActive": {
            "type": "boolean",
            "description": "If the community is active or not"
          },
          "levelType": {
            "type": "string",
            "description": "Level Type"
          },
          "communityCode": {
            "type": "string",
            "description": "Community Code"
          },
          "communityName": {
            "type": "string",
            "description": "Community Name"
          },
          "isPosRedemption": {
            "type": "boolean",
            "description": "Indicates if it participates in POS redemption"
          },
          "isPretaxEnabled": {
            "type": "boolean",
            "description": "Indicates - Is Pre Tax Enabled"
          },
          "serviceStartDate": {
            "type": "string",
            "description": "Community Service Start Date",
            "format": "date-time"
          },
          "settlementSource": {
            "type": "string",
            "description": "Settlement Source"
          },
          "supportedCountries": {
            "type": "array",
            "description": "List of supprted countries",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.Country"
            }
          },
          "isCommissionEnabled": {
            "type": "boolean",
            "description": "flag to check if commission entry is enabled"
          },
          "parentCommunityCode": {
            "type": "string",
            "description": "Parent Community Code"
          },
          "communityDescription": {
            "type": "string",
            "description": "Community Description"
          },
          "supportedCategoryGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.CommunityCategoryGroups"
            }
          },
          "isPerUnitDiscountEnabled": {
            "type": "boolean",
            "description": "Indicates - Is Per Unit Discount Enabled"
          },
          "isTokenQualificationSupported": {
            "type": "boolean"
          },
          "maxStatementCreditAmountAllowed": {
            "type": "string",
            "description": "Max Statement Credit allowed"
          },
          "communityFulfillmentCurrencyCodeNumeric": {
            "type": "string",
            "description": "Community Fulfillment Currency Code"
          }
        }
      },
      "RealTimeOffersApi.Models.GetSCDetailRequest": {
        "type": "object",
        "properties": {
          "cardId": {
            "type": "string",
            "description": "CardId (guid) return from card enrollment"
          },
          "userId": {
            "type": "string",
            "description": "the processor service key returned during the enrollment."
          },
          "userKey": {
            "type": "string",
            "description": "User Key"
          },
          "settlementId": {
            "type": "string",
            "description": "Settlement Id"
          },
          "communityCode": {
            "type": "string",
            "description": "Community code"
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "transactionId": {
            "type": "string",
            "description": "Transaction Id"
          }
        }
      },
      "RealTimeOffersApi.Models.ResponseStatus": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Indicates whether the request was successful or not. Return value can be either \"SUCCESS\" or \"FAILED\""
          },
          "message": {
            "type": "string",
            "description": "Response status message"
          },
          "responseStatusDetails": {
            "type": "array",
            "description": "Response status details",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.ResponseStatusDetail"
            }
          }
        },
        "description": "Response status class"
      },
      "RealTimeOffersApi.Models.UpdateOfferResponse": {
        "type": "object",
        "properties": {
          "offerId": {
            "type": "integer",
            "description": "Offer id generated by VOP",
            "format": "int32"
          },
          "communityCode": {
            "type": "string",
            "description": "Client community code sent in the request is sent back in the response."
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "statusMessage": {
            "type": "string",
            "description": "Status message"
          },
          "responseStatus": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.ResponseStatus"
          },
          "responseDateTime": {
            "type": "string",
            "description": "Response Date Time in GMT. Format 2022-01-18T22:29:12.8759678Z",
            "format": "date-time"
          }
        }
      },
      "RealTimeOffersApi.Models.MerchantIdentificationByRefIdResponse": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "responseStatus": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.ResponseStatus"
          },
          "responseDateTime": {
            "type": "string",
            "description": "Response Date Time in GMT. Format 2022-01-18T22:29:12.8759678Z",
            "format": "date-time"
          },
          "merchantIdentificationResponse": {
            "type": "array",
            "description": "List of Merchant Details",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.MerchantIdentificationByRefIdResp"
            }
          }
        }
      },
      "RealTimeOffersApi.Models.Category": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Category Name"
          },
          "subGroups": {
            "type": "array",
            "description": "Sub Groups array",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.SubGroup"
            }
          }
        }
      },
      "Visa.Ice.RealTime.Enrollment.Contracts.Common.ContactInfo": {
        "type": "object",
        "properties": {
          "ContactType": {
            "type": "integer",
            "description": "Channel type: SMS or Email",
            "format": "int32",
            "enum": [0, 1]
          },
          "CountryCode": {
            "type": "string",
            "description": "3 digit country code prefix"
          },
          "ContactValue": {
            "type": "string",
            "description": "Mobile number or email address"
          },
          "ContactVerified": {
            "type": "boolean",
            "description": "If contact is verified"
          },
          "ConfirmationCode": {
            "type": "string"
          },
          "NotificationChannelId": {
            "type": "string",
            "description": "identifier of Notification Channel",
            "format": "uuid"
          }
        }
      },
      "RealTimeOffersApi.Models.MerchantRawAddress": {
        "type": "object",
        "properties": {
          "city": {
            "type": "string",
            "description": "City of the merchant"
          },
          "name": {
            "type": "string",
            "description": "Name of the merchant"
          },
          "state": {
            "type": "string",
            "description": "State of the merchant"
          },
          "address1": {
            "type": "string",
            "description": "Street Address of the Merchant"
          },
          "address2": {
            "type": "string",
            "description": "Street Address of the Merchant"
          },
          "postalCode": {
            "type": "string",
            "description": "Postal Code of the Merchant"
          },
          "countryCode": {
            "type": "string",
            "description": "Country of the merchant"
          }
        },
        "description": "Raw merchant details from acquirer"
      },
      "RealTimeOffersApi.Models.DeleteCardResponse": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "responseStatus": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.ResponseStatus"
          },
          "responseDateTime": {
            "type": "string",
            "description": "Response Date Time in GMT. Format 2022-01-18T22:29:12.8759678Z",
            "format": "date-time"
          }
        }
      },
      "RealTimeOffersApi.Models.Event.SustitutionVariables": {
        "type": "object",
        "properties": {
          "userDefinedVariables": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "systemDefinedVariables": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "RealTimeOffersApi.Models.MerchantGroupDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID for the merchant group"
          },
          "name": {
            "type": "string",
            "description": "Alphanumeric merchant group name"
          },
          "isActive": {
            "type": "boolean",
            "description": "Merchant Group Status - Active or In-active"
          },
          "createdBy": {
            "type": "string",
            "description": "API username for the user who created the merchant group. CYBS if added through CSC"
          },
          "modifiedBy": {
            "type": "string",
            "description": "API username for the user who edited any merchant in the merchant group. CYBS if edited through CSC"
          },
          "createdDate": {
            "type": "string",
            "description": "Date merchant group was created",
            "format": "date-time"
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date merchant group was last modified to add or delete merchants",
            "format": "date-time"
          },
          "communityCode": {
            "type": "string",
            "description": "Client community code sent in the request is sent back in the response."
          },
          "acquirerDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.MerchantAcquirerDetails"
            }
          },
          "merchantDetails": {
            "type": "array",
            "description": "List of Merchants or stores associated with the merchant group.",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.MerchantDetails"
            }
          },
          "merchantGroupType": {
            "type": "string",
            "description": "Merchant Group Type, Allowed Types - 'MerchantInfo'  for Visa defined merchant ids and 'AcquirerInfo' for acquirer assigned merchant values"
          }
        }
      },
      "RealTimeOffersApi.Models.GetUsersByCardDetailResponse": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "responseStatus": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.ResponseStatus"
          },
          "responseDateTime": {
            "type": "string",
            "description": "Response Date Time in GMT. Format 2022-01-18T22:29:12.8759678Z",
            "format": "date-time"
          },
          "enrollmentRecords": {
            "type": "array",
            "description": "List of active user details",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.EnrollmentInfoResponse"
            }
          }
        }
      },
      "RealTimeOffersApi.Models.UserInfoResponse": {
        "type": "object",
        "properties": {
          "contacts": {
            "type": "array",
            "description": "Contact information passed in the enrollment request is sent back in the response",
            "items": {
              "$ref": "#/components/schemas/Visa.Ice.RealTime.Enrollment.Contracts.Common.ContactInfo"
            }
          },
          "lastName": {
            "type": "string",
            "description": "Last Name of User"
          },
          "firstName": {
            "type": "string",
            "description": "First Name of user"
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Is Deleted"
          },
          "promoCode": {
            "type": "string",
            "description": "\"Promotional code associated with the enrollment of the user. VOP sets the\tPromoCode to upper case upon receipt.Alphanumeric.No special characters. Can be used as targeting criteria in offers.\""
          },
          "referrerId": {
            "type": "string",
            "description": "Contains Referrer's Id"
          },
          "enrolledDate": {
            "type": "string",
            "description": "Date when the user was enrolled in VOP",
            "format": "date-time"
          },
          "externalUserId": {
            "type": "string",
            "description": "\"An alphanumeric user identifier of arbitrary length supplied by a partner that identifies a user within his or her application.Supplied as part of an enrollment request and returned as part of the response. Same as UserKey\""
          },
          "isSmsPreferred": {
            "type": "boolean",
            "description": "True if SMS was selected as preferred communication method in the request"
          },
          "isEmailPreferred": {
            "type": "boolean",
            "description": "True if email was selected as preferred communication method in the request"
          },
          "membershipNumber": {
            "type": "string",
            "description": "A special identification number internal that can be used as unique identifier for the cardholder."
          }
        }
      },
      "Visa.Ice.RealTime.Enrollment.Contracts.Enrollment.SubGroup": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "Value": {
            "type": "string"
          }
        }
      },
      "RealTimeOffersApi.Models.CommunityMerchantGroupDetailsGetResponse": {
        "type": "object",
        "properties": {
          "endIndex": {
            "type": "integer",
            "description": "Last record number included in the response",
            "format": "int32"
          },
          "syncTime": {
            "type": "integer",
            "description": "Latest Sync Time",
            "format": "int64"
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "merchantGroups": {
            "type": "array",
            "description": "List of Merchant Group Details",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.MerchantGroupDetails"
            }
          },
          "responseStatus": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.ResponseStatus"
          },
          "responseDateTime": {
            "type": "string",
            "description": "Response Date Time in GMT. Format 2022-01-18T22:29:12.8759678Z",
            "format": "date-time"
          },
          "countOfRemainingRecords": {
            "type": "integer",
            "description": "Count on remaining records based on the search criteria",
            "format": "int32"
          }
        }
      },
      "RealTimeOffersApi.Models.EnrollResponse": {
        "type": "object",
        "properties": {
          "userDetails": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.User"
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "responseStatus": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.ResponseStatus"
          },
          "responseDateTime": {
            "type": "string",
            "description": "Response Date Time in GMT. Format 2022-01-18T22:29:12.8759678Z",
            "format": "date-time"
          }
        },
        "description": "Enroll Response"
      },
      "RealTimeOffersApi.Models.UserVerification.ValidateOtpRequest": {
        "required": [
          "cardId",
          "communityCode",
          "consumerVerificationId",
          "otp",
          "userId"
        ],
        "type": "object",
        "properties": {
          "otp": {
            "type": "string"
          },
          "cardId": {
            "type": "string",
            "format": "uuid"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "communityCode": {
            "type": "string"
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "consumerVerificationId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "RealTimeOffersApi.Models.SaveAcquirerDetailsInMerchantGroupResponse": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "responseStatus": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.ResponseStatus"
          },
          "responseDateTime": {
            "type": "string",
            "description": "Response Date Time in GMT. Format 2022-01-18T22:29:12.8759678Z",
            "format": "date-time"
          },
          "merchantAcquirerDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.MerchantAcquirerDetails"
            }
          }
        }
      },
      "RealTimeOffersApi.Models.Message": {
        "type": "object",
        "properties": {
          "messageCode": {
            "type": "string",
            "description": "Status message code"
          },
          "messageText": {
            "type": "string",
            "description": "Status message"
          },
          "messageType": {
            "type": "integer",
            "format": "int32",
            "enum": [0, 1, 2]
          },
          "identifyingValue": {
            "type": "string"
          }
        }
      },
      "RealTimeOffersApi.Models.Event.GetEventDetails": {
        "type": "object",
        "properties": {
          "eventId": {
            "type": "integer",
            "format": "int32"
          },
          "offerId": {
            "type": "integer",
            "format": "int32"
          },
          "eventType": {
            "type": "string"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "eventRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.Event.EventDetailRules"
            }
          },
          "description": {
            "type": "string"
          },
          "endDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "communityCode": {
            "type": "string"
          },
          "startDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "actionMessages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.Event.EventDetailActionMessages"
            }
          },
          "createdDateTime": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "RealTimeOffersApi.Models.MerchantSearchDetailsResponseInternal": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "responseStatus": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.ResponseStatus"
          },
          "merchantDetails": {
            "type": "array",
            "description": "A list of Merchant objects",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.MerchantSearchInfoInternal"
            }
          },
          "responseDateTime": {
            "type": "string",
            "description": "Response Date Time in GMT. Format 2022-01-18T22:29:12.8759678Z",
            "format": "date-time"
          },
          "numberOfMatchedRecords": {
            "type": "integer",
            "description": "Number of matched records",
            "format": "int32"
          }
        },
        "description": "Search Merchant response class"
      },
      "RealTimeOffersApi.Models.UpdateOfferRequest": {
        "required": ["action", "communityCode", "offerId"],
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "description": "Pass value REJECT to reject an approved offer. To disable a published offer, use VOP UI."
          },
          "offerId": {
            "type": "string",
            "description": "Offer id generated by VOP"
          },
          "communityCode": {
            "type": "string",
            "description": "Client community code, must be exact match with the community code (CL community value) provided by Visa"
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          }
        }
      },
      "RealTimeOffersApi.Models.MerchantIdentificationResponse": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "responseStatus": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.ResponseStatus"
          },
          "responseDateTime": {
            "type": "string",
            "description": "Response Date Time in GMT. Format 2022-01-18T22:29:12.8759678Z",
            "format": "date-time"
          },
          "merchantDetailsResponse": {
            "type": "array",
            "description": "List of Merchant Details",
            "items": {
              "$ref": "#/components/schemas/RealTimeOffersApi.Models.MerchantIdentificationDetails"
            }
          }
        }
      },
      "RealTimeOffersApi.Models.Event.EventDetailRules": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "propertyName": {
            "type": "string"
          },
          "attributeType": {
            "type": "string"
          },
          "propertyValue": {
            "type": "string"
          }
        }
      },
      "RealTimeOffersApi.Models.EnrollRequest": {
        "required": ["userDetails"],
        "type": "object",
        "properties": {
          "userDetails": {
            "$ref": "#/components/schemas/RealTimeOffersApi.Models.User"
          },
          "correlationId": {
            "type": "string",
            "description": "This value is generated by the client, and should be unique per request submission. If provided, the correlation id is included in the response, allowing client to unambiguously map requests to responses.",
            "format": "uuid"
          },
          "communityTermsVersion": {
            "type": "string",
            "description": "Static value representing current version of the terms and conditions agreement."
          }
        },
        "description": "Enroll Request"
      }
    },
    "responses": {},
    "parameters": {},
    "examples": {},
    "requestBodies": {},
    "headers": {},
    "callbacks": {}
  },
  "x-tagGroups": [
    {
      "name": "API Reference",
      "tags": [
        "Communities API",
        "Merchants API",
        "Offers API",
        "Rewards API",
        "Users API"
      ]
    }
  ]
}
